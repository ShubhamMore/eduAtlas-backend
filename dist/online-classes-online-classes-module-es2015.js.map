{"version":3,"sources":["./src/app/pages/institute/online-classes/online-classes-conf/add-online-class/add-online-class.component.html","./src/app/pages/institute/online-classes/online-classes-conf/manage-online-class/manage-online-class.component.html","./src/app/pages/institute/online-classes/online-classes-conf/online-class-settings/online-class-settings.component.html","./src/app/pages/institute/online-classes/online-classes-conf/online-classes-conf.component.html","./src/app/pages/institute/online-classes/online-classes-conf/add-online-class/add-online-class.component.scss","./src/app/pages/institute/online-classes/online-classes-conf/add-online-class/add-online-class.component.ts","./src/app/pages/institute/online-classes/online-classes-conf/manage-online-class/manage-online-class.component.scss","./src/app/pages/institute/online-classes/online-classes-conf/manage-online-class/manage-online-class.component.ts","./src/app/pages/institute/online-classes/online-classes-conf/online-class-settings/online-class-settings.component.scss","./src/app/pages/institute/online-classes/online-classes-conf/online-class-settings/online-class-settings.component.ts","./src/app/pages/institute/online-classes/online-classes-conf/online-classes-conf.component.scss","./src/app/pages/institute/online-classes/online-classes-conf/online-classes-conf.component.ts","./src/app/pages/institute/online-classes/online-classes-routing.module.ts","./src/app/pages/institute/online-classes/online-classes.module.ts"],"names":[],"mappings":"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","file":"online-classes-online-classes-module-es2015.js","sourcesContent":["export default \"<p style=\\\"color: black; font-weight: bold;\\\">Schedule A Live Class</p>\\r\\n\\r\\n<nb-card *ngIf=\\\"display\\\">\\r\\n  <nb-card-body>\\r\\n    <form [formGroup]=\\\"onlineClassForm\\\" (submit)=\\\"saveOnlineClass()\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"teacherId\\\">*Teacher</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Teacher\\\"\\r\\n            id=\\\"teacherId\\\"\\r\\n            [status]=\\\"\\r\\n              onlineClassForm.get('teacherId').invalid && onlineClassForm.get('teacherId').touched\\r\\n                ? 'danger'\\r\\n                : 'basic'\\r\\n            \\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"teacherId\\\"\\r\\n          >\\r\\n            <nb-option value=\\\"\\\">Select Teacher</nb-option>\\r\\n            <nb-option *ngFor=\\\"let i of teachers\\\" [value]=\\\"i._id\\\">{{\\r\\n              i.basicDetails.name\\r\\n            }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small\\r\\n            *ngIf=\\\"\\r\\n              onlineClassForm.get('teacherId').invalid && onlineClassForm.get('teacherId').touched\\r\\n            \\\"\\r\\n            >*Course is required</small\\r\\n          >\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"courseId\\\">*Course</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Course\\\"\\r\\n            id=\\\"courseId\\\"\\r\\n            [status]=\\\"\\r\\n              onlineClassForm.get('courseId').invalid && onlineClassForm.get('courseId').touched\\r\\n                ? 'danger'\\r\\n                : 'basic'\\r\\n            \\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"courseId\\\"\\r\\n            (selectedChange)=\\\"onSelectCourse($event)\\\"\\r\\n          >\\r\\n            <nb-option value=\\\"\\\">Select Course</nb-option>\\r\\n            <nb-option *ngFor=\\\"let i of institute.course\\\" [value]=\\\"i._id\\\">{{ i.name }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small\\r\\n            *ngIf=\\\"\\r\\n              onlineClassForm.get('courseId').invalid && onlineClassForm.get('courseId').touched\\r\\n            \\\"\\r\\n            >*Course is required</small\\r\\n          >\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"batchId\\\">*Batch</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Batch\\\"\\r\\n            id=\\\"batchId\\\"\\r\\n            formControlName=\\\"batchId\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"\\r\\n              onlineClassForm.get('batchId').invalid && onlineClassForm.get('batchId').touched\\r\\n                ? 'danger'\\r\\n                : 'basic'\\r\\n            \\\"\\r\\n          >\\r\\n            <nb-option value=\\\"\\\">Select Batch</nb-option>\\r\\n            <nb-option *ngFor=\\\"let item of batches\\\" [value]=\\\"item._id\\\">{{\\r\\n              item.batchCode\\r\\n            }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small\\r\\n            *ngIf=\\\"onlineClassForm.get('batchId').invalid && onlineClassForm.get('batchId').touched\\\"\\r\\n            >*Batch is required</small\\r\\n          >\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"startDate\\\">*Start Date</label>\\r\\n            <input\\r\\n              type=\\\"date\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('startDate').invalid && onlineClassForm.get('startDate').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"startDate\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"startDate\\\"\\r\\n              placeholder=\\\"startDate\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('startDate').invalid && onlineClassForm.get('startDate').touched\\r\\n              \\\"\\r\\n              >*Start Date is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"startTime\\\">*Start Time</label>\\r\\n            <input\\r\\n              type=\\\"time\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('startTime').invalid && onlineClassForm.get('startTime').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"startTime\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"startTime\\\"\\r\\n              placeholder=\\\"startTime\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('startTime').invalid && onlineClassForm.get('startTime').touched\\r\\n              \\\"\\r\\n              >*Start Time is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"duration\\\">*Duration (in Min)</label>\\r\\n            <input\\r\\n              type=\\\"duration\\\"\\r\\n              nbInput\\r\\n              pattern=\\\"\\\\d*\\\"\\r\\n              maxlength=\\\"3\\\"\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('duration').invalid && onlineClassForm.get('duration').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"duration\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"duration\\\"\\r\\n              placeholder=\\\"duration\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('duration').invalid && onlineClassForm.get('duration').touched\\r\\n              \\\"\\r\\n              >*Duration is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"topic\\\">*Topic</label>\\r\\n            <input\\r\\n              type=\\\"topic\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('topic').invalid && onlineClassForm.get('topic').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"topic\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"topic\\\"\\r\\n              placeholder=\\\"topic\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"onlineClassForm.get('topic').invalid && onlineClassForm.get('topic').touched\\\"\\r\\n              >*Topic is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"agenda\\\">*Agenda</label>\\r\\n            <input\\r\\n              type=\\\"startTime\\\"\\r\\n              nbInput\\r\\n              status=\\\"basic\\\"\\r\\n              id=\\\"agenda\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"agenda\\\"\\r\\n              placeholder=\\\"Agenda\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">*Password</label>\\r\\n            <input\\r\\n              type=\\\"topic\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('password').invalid && onlineClassForm.get('password').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"password\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"password\\\"\\r\\n              placeholder=\\\"password\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('password').invalid && onlineClassForm.get('password').touched\\r\\n              \\\"\\r\\n              >*Password is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\">Save</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<div class=\\\"row mb-2\\\" *ngIf=\\\"display\\\">\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <p style=\\\"color: black; font-weight: bold;\\\">Schedule A Live Class</p>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n    <nb-select\\r\\n      placeholder=\\\"Select Course\\\"\\r\\n      status=\\\"basic\\\"\\r\\n      fullWidth\\r\\n      (selectedChange)=\\\"onSelectCourse($event)\\\"\\r\\n    >\\r\\n      <nb-option value=\\\"\\\">Select Course</nb-option>\\r\\n      <nb-option *ngFor=\\\"let course of institute.course\\\" [value]=\\\"course._id\\\">{{\\r\\n        course.name\\r\\n      }}</nb-option>\\r\\n    </nb-select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n    <nb-select\\r\\n      placeholder=\\\"Select Batch\\\"\\r\\n      fullWidth\\r\\n      status=\\\"basic\\\"\\r\\n      (selectedChange)=\\\"onSelectBatch($event)\\\"\\r\\n    >\\r\\n      <nb-option value=\\\"\\\">Select Batch</nb-option>\\r\\n      <nb-option *ngFor=\\\"let batch of batches\\\" [value]=\\\"batch._id\\\">{{ batch.batchCode }}</nb-option>\\r\\n    </nb-select>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<nb-card status=\\\"info\\\">\\r\\n  <nb-card-header>UPCOMING CLASSES</nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <nb-list *ngIf=\\\"meetings.length > 0; else noMeetings\\\">\\r\\n      <nb-list-item *ngFor=\\\"let meeting of meetings; let i = index\\\">\\r\\n        <div class=\\\"row\\\" style=\\\"width: 100%;\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"date-block\\\">\\r\\n              <span class=\\\"month\\\">{{ month(meeting.startTime) }}</span>\\r\\n              <span class=\\\"day\\\">{{ day(meeting.startTime) }}</span>\\r\\n            </div>\\r\\n            <div class=\\\"meeting-details\\\">\\r\\n              <div class=\\\"detail1\\\">Topic: {{ meeting.topic }}</div>\\r\\n              <div class=\\\"detail1\\\">Start Time: {{ createTime(meeting.startTime) }}</div>\\r\\n              <div class=\\\"detail2\\\">Host: {{ meeting.hostName }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"text-right\\\">\\r\\n              <button class=\\\"mr-3 mb-1\\\" nbButton status=\\\"info\\\" (click)=\\\"goLive(meeting.startUrl)\\\">\\r\\n                Go Live\\r\\n              </button>\\r\\n              <button class=\\\"mr-3 mb-1\\\" nbButton status=\\\"warning\\\" (click)=\\\"notify(i)\\\">\\r\\n                Notify\\r\\n              </button>\\r\\n              <button class=\\\"mr-3 mb-1\\\" nbButton status=\\\"warning\\\" (click)=\\\"edit(meeting._id)\\\">\\r\\n                Edit\\r\\n              </button>\\r\\n              <button\\r\\n                class=\\\"mr-3 mb-1\\\"\\r\\n                nbButton\\r\\n                status=\\\"danger\\\"\\r\\n                (click)=\\\"deleteMeeting(meeting._id, meeting.meetingId)\\\"\\r\\n              >\\r\\n                Delete\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </nb-list-item>\\r\\n    </nb-list>\\r\\n    <ng-template #noMeetings>\\r\\n      <p class=\\\"mt-5 text-center\\\">No Meetings Available</p>\\r\\n    </ng-template>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\\r\\n<!-- <nb-card status=\\\"warning\\\">\\r\\n  <nb-card-header>RECORDED CLASSES</nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <p class=\\\"mt-5 text-center\\\">No Recorded Classes</p>\\r\\n  </nb-card-body>\\r\\n</nb-card> -->\\r\\n\"","export default \"<p style=\\\"color: black; font-weight: bold;\\\">Settings</p>\\r\\n\\r\\n<nb-card>\\r\\n  <nb-card-body>\\r\\n    <form [formGroup]=\\\"settingForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <label for=\\\"publicKey\\\">Public Key</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"publicKey\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"f.publicKey.errors && f.publicKey.touched ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"publicKey\\\"\\r\\n            placeholder=\\\"Public Key\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.publicKey.errors && f.publicKey.touched\\\">*Public Key is req.</small>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <label for=\\\"secretKey\\\">Secret Key</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"secretKey\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"f.secretKey.errors && f.secretKey.touched ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"secretKey\\\"\\r\\n            placeholder=\\\"Secret Key\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.secretKey.errors && f.secretKey.touched\\\">*Secret Key is req.</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"display: block; margin-top: 1rem; text-align: right;\\\">\\r\\n        <button type=\\\"submit\\\" nbButton status=\\\"warning\\\" style=\\\"color: black;\\\">\\r\\n          {{ edit === 'true' ? 'Update Keys' : 'Add Keys' }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9vbmxpbmUtY2xhc3Nlcy9vbmxpbmUtY2xhc3Nlcy1jb25mL2FkZC1vbmxpbmUtY2xhc3MvYWRkLW9ubGluZS1jbGFzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Location } from '@angular/common';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from './../../../../../services/api.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-add-online-class',\r\n  templateUrl: './add-online-class.component.html',\r\n  styleUrls: ['./add-online-class.component.scss'],\r\n})\r\nexport class AddOnlineClassComponent implements OnInit {\r\n  onlineClassForm: FormGroup;\r\n  instituteId: string;\r\n\r\n  institute: any;\r\n\r\n  meetingId: any;\r\n  meeting: any;\r\n  edit: any;\r\n\r\n  batches: any[] = [];\r\n  teachers: any[] = [];\r\n\r\n  display: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private route: ActivatedRoute,\r\n    private toasterService: NbToastrService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.display = false;\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n    this.route.queryParams.subscribe((param) => {\r\n      this.meetingId = param.meeting;\r\n      this.edit = param.edit;\r\n    });\r\n    this.getCourses(this.instituteId);\r\n\r\n    this.onlineClassForm = this.fb.group({\r\n      teacherId: ['', Validators.required],\r\n      instituteId: [this.instituteId],\r\n      courseId: ['', Validators.required],\r\n      batchId: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      startTime: ['', Validators.required],\r\n      duration: ['', Validators.required], // Num in Min\r\n      topic: ['', Validators.required],\r\n      agenda: [''],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  getMeeting(id: string) {\r\n    this.api.getOneMeeting({ id }).subscribe(\r\n      (data: any) => {\r\n        this.meeting = data;\r\n        this.onlineClassForm.patchValue({\r\n          teacherId: this.meeting.hostId,\r\n          instituteId: this.meeting.instituteId,\r\n          courseId: this.meeting.courseId,\r\n          startDate: this.meeting.startTime.split('T')[0],\r\n          startTime: this.meeting.startTime.split('T')[1].substring(0, 5),\r\n          duration: this.meeting.duration,\r\n          topic: this.meeting.topic,\r\n          agenda: this.meeting.agenda,\r\n          password: this.meeting.password,\r\n        });\r\n\r\n        this.onSelectCourse(this.meeting.courseId);\r\n\r\n        this.onlineClassForm.patchValue({\r\n          batchId: this.meeting.batchId,\r\n        });\r\n        this.display = true;\r\n      },\r\n      (err: any) => {},\r\n    );\r\n  }\r\n\r\n  getCourses(id: string) {\r\n    this.api.getCourseTD(id).subscribe((data: any) => {\r\n      this.institute = data;\r\n      this.getEmployees(this.instituteId);\r\n    });\r\n  }\r\n\r\n  onSelectCourse(id: string) {\r\n    this.batches = this.institute.batch.filter((b: any) => b.course === id);\r\n  }\r\n\r\n  getEmployees(instituteId: string) {\r\n    this.api.getEmployeesByInstituteId(instituteId).subscribe((data: any) => {\r\n      this.teachers = data;\r\n      if (this.edit) {\r\n        this.getMeeting(this.meetingId);\r\n      } else {\r\n        this.display = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveOnlineClass() {\r\n    if (this.onlineClassForm.valid) {\r\n      const date =\r\n        this.onlineClassForm.value.startDate + 'T' + this.onlineClassForm.value.startTime + ':00';\r\n\r\n      if (!this.edit) {\r\n        const onlineClass = {\r\n          teacherId: this.onlineClassForm.value.teacherId,\r\n          instituteId: this.instituteId,\r\n          batchId: this.onlineClassForm.value.batchId,\r\n          courseId: this.onlineClassForm.value.courseId,\r\n          startTime: date,\r\n          duration: this.onlineClassForm.value.duration,\r\n          topic: this.onlineClassForm.value.topic,\r\n          agenda: this.onlineClassForm.value.agenda,\r\n          password: this.onlineClassForm.value.password,\r\n        };\r\n        this.api.createMeeting(onlineClass).subscribe(\r\n          (res) => {\r\n            this.showToast('top right', 'success', 'Meeting Added Successfully');\r\n            this.location.back();\r\n          },\r\n          (err: any) => {\r\n            this.showToast('top right', 'danger', err.err.message);\r\n          },\r\n        );\r\n      } else {\r\n        const onlineClass = {\r\n          _id: this.meetingId,\r\n          meetingId: this.meeting.meetingId,\r\n          teacherId: this.onlineClassForm.value.teacherId,\r\n          instituteId: this.instituteId,\r\n          batchId: this.onlineClassForm.value.batchId,\r\n          courseId: this.onlineClassForm.value.courseId,\r\n          startTime: date,\r\n          duration: this.onlineClassForm.value.duration,\r\n          topic: this.onlineClassForm.value.topic,\r\n          agenda: this.onlineClassForm.value.agenda,\r\n          password: this.onlineClassForm.value.password,\r\n        };\r\n\r\n        this.api.updateMeeting(onlineClass).subscribe(\r\n          (res) => {\r\n            this.showToast('top right', 'success', 'Meeting Updated Successfully');\r\n            this.location.back();\r\n          },\r\n          (err: any) => {\r\n            this.showToast('top right', 'danger', err.err.message);\r\n          },\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, { position, status });\r\n  }\r\n}\r\n","export default \".month {\\n  display: block;\\n  text-align: center;\\n  color: #fff;\\n  font-weight: bold;\\n  margin-top: 10px;\\n  font-size: 30px; }\\n\\n.day {\\n  display: block;\\n  text-align: center;\\n  color: #fff;\\n  margin-top: 10px;\\n  font-size: 20px; }\\n\\n.date-block {\\n  float: left;\\n  width: 75px;\\n  height: 75px;\\n  background-color: #0095ff; }\\n\\n.meeting-details {\\n  float: left;\\n  padding-left: 25px;\\n  width: 60%; }\\n\\n.meeting-details .detail1 {\\n  padding-bottom: 10px;\\n  display: block;\\n  font-weight: bold; }\\n\\n.meeting-details .detail2 {\\n  display: block;\\n  font-weight: bold;\\n  color: #a3a2a2; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL29ubGluZS1jbGFzc2VzL29ubGluZS1jbGFzc2VzLWNvbmYvbWFuYWdlLW9ubGluZS1jbGFzcy9FOlxcUHJvamVjdHNcXEZyZWVsYW5jZSBQcm9qZWN0c1xcRWR1QXRsYXNcXGVkdWF0bGFzMVxcY2xpZW50L3NyY1xcYXBwXFxwYWdlc1xcaW5zdGl0dXRlXFxvbmxpbmUtY2xhc3Nlc1xcb25saW5lLWNsYXNzZXMtY29uZlxcbWFuYWdlLW9ubGluZS1jbGFzc1xcbWFuYWdlLW9ubGluZS1jbGFzcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZUFBZSxFQUFBOztBQUdqQjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixlQUFlLEVBQUE7O0FBRWpCO0VBQ0UsV0FBVztFQUNYLFdBQVc7RUFDWCxZQUFZO0VBQ1oseUJBQXlCLEVBQUE7O0FBRTNCO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixVQUFVLEVBQUE7O0FBRVo7RUFDRSxvQkFBb0I7RUFDcEIsY0FBYztFQUNkLGlCQUFpQixFQUFBOztBQUVuQjtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL29ubGluZS1jbGFzc2VzL29ubGluZS1jbGFzc2VzLWNvbmYvbWFuYWdlLW9ubGluZS1jbGFzcy9tYW5hZ2Utb25saW5lLWNsYXNzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vbnRoIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBmb250LXNpemU6IDMwcHg7XHJcbn1cclxuXHJcbi5kYXkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogI2ZmZjtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG4uZGF0ZS1ibG9jayB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgd2lkdGg6IDc1cHg7XHJcbiAgaGVpZ2h0OiA3NXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDk1ZmY7XHJcbn1cclxuLm1lZXRpbmctZGV0YWlscyB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAyNXB4O1xyXG4gIHdpZHRoOiA2MCU7XHJcbn1cclxuLm1lZXRpbmctZGV0YWlscyAuZGV0YWlsMSB7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLm1lZXRpbmctZGV0YWlscyAuZGV0YWlsMiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICNhM2EyYTI7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from '../../../../../services/api.service';\r\n\r\n@Component({\r\n  selector: 'ngx-manage-online-class',\r\n  templateUrl: './manage-online-class.component.html',\r\n  styleUrls: ['./manage-online-class.component.scss'],\r\n})\r\nexport class ManageOnlineClassComponent implements OnInit {\r\n  institute: any;\r\n  instituteId: string;\r\n  batches: any[] = [];\r\n  display: boolean;\r\n  courseId: string;\r\n  batch: string;\r\n\r\n  meetings: any[];\r\n\r\n  months: string[] = [\r\n    'JAN',\r\n    'FEB',\r\n    'MAR',\r\n    'APR',\r\n    'MAY',\r\n    'JUN',\r\n    'JUL',\r\n    'AUG',\r\n    'SEP',\r\n    'OCT',\r\n    'NOV',\r\n    'DEC',\r\n  ];\r\n\r\n  constructor(\r\n    private active: ActivatedRoute,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.display = false;\r\n    this.meetings = [];\r\n    this.instituteId = this.active.snapshot.paramMap.get('id');\r\n    this.getCourses(this.instituteId);\r\n  }\r\n\r\n  getCourses(id: string) {\r\n    this.api.getCourseTD(id).subscribe((data: any) => {\r\n      this.institute = data;\r\n      this.display = true;\r\n    });\r\n  }\r\n\r\n  month(time: string) {\r\n    const month = time.split('T')[0].split('-')[1];\r\n    return this.months[+month - 1];\r\n  }\r\n\r\n  day(time: string) {\r\n    return time.split('T')[0].split('-')[2];\r\n  }\r\n\r\n  onSelectCourse(id: string) {\r\n    this.courseId = id;\r\n    this.batches = this.institute.batch.filter((b: any) => b.course === id);\r\n  }\r\n\r\n  onSelectBatch(batchId: string) {\r\n    this.batch = batchId;\r\n    this.getUpcomingClasses(this.instituteId, batchId);\r\n  }\r\n\r\n  goLive(startUrl: string) {\r\n    window.open(\r\n      startUrl,\r\n      'Zoom',\r\n      'scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no',\r\n    );\r\n  }\r\n\r\n  notify(i: number) {}\r\n\r\n  edit(id: string) {\r\n    this.router.navigate(\r\n      [`/pages/institute/online-classes/create-class/${this.instituteId}/edit`],\r\n      {\r\n        queryParams: { meeting: id, edit: 'true' },\r\n      },\r\n    );\r\n  }\r\n\r\n  deleteMeeting(id: string, meetingId: string) {\r\n    this.api.deleteMeeting({ _id: id, meetingId: meetingId }).subscribe(\r\n      (res: any) => {},\r\n      (err) => {},\r\n    );\r\n  }\r\n\r\n  createTime(time: string) {\r\n    const dateTime = time.split('T');\r\n    return dateTime[0] + ' ' + dateTime[1].substring(0, 5);\r\n  }\r\n\r\n  getUpcomingClasses(instituteId: any, batchId: any) {\r\n    this.api\r\n      .getMeetingByBatch({ instituteId: instituteId, batchId: batchId, type: 'upcoming' })\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.meetings = res;\r\n        },\r\n        (err) => {},\r\n      );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9vbmxpbmUtY2xhc3Nlcy9vbmxpbmUtY2xhc3Nlcy1jb25mL29ubGluZS1jbGFzcy1zZXR0aW5ncy9vbmxpbmUtY2xhc3Mtc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../../../../services/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { AuthService } from '../../../../../services/auth-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'ngx-online-class-settings',\r\n  templateUrl: './online-class-settings.component.html',\r\n  styleUrls: ['./online-class-settings.component.scss'],\r\n})\r\nexport class OnlineClassSettingsComponent implements OnInit {\r\n  instituteId: string;\r\n  edit: string;\r\n  settingForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private toasterService: NbToastrService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n    this.route.queryParams.subscribe((param) => {\r\n      this.edit = param.edit;\r\n    });\r\n\r\n    this.api.getCredentials().subscribe((res: any) => {\r\n      if (res && res.client_id) {\r\n        this.edit = 'true';\r\n        this.settingForm.patchValue({\r\n          publicKey: res.client_id,\r\n          secretKey: res.client_secret_id,\r\n        });\r\n      }\r\n    });\r\n\r\n    this.settingForm = this.fb.group({\r\n      publicKey: ['', Validators.required],\r\n      secretKey: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.settingForm.markAllAsTouched();\r\n\r\n    var userId = this.authService.getUser()._id;\r\n    var requestData = {\r\n      client_id: this.settingForm.get('publicKey').value,\r\n      client_secret_id: this.settingForm.get('secretKey').value,\r\n      user_id: userId,\r\n    };\r\n    this.api.addCredentials(requestData).subscribe(\r\n      (res: any) => {\r\n        this.showToast('top-right', 'success', 'Settings Updated');\r\n        this.api.getZoomAuth({ userId: res.user_id }).subscribe((data: any) => {\r\n          window.open(\r\n            data.authLink,\r\n            '_blank',\r\n            'toolbar,scrollbars,resizable,top=500,left=500,width=400,height=400',\r\n          );\r\n        });\r\n        this.router.navigate(['/pages/institute/online-classes/create-class/', this.instituteId]);\r\n      },\r\n      (error) => console.error(error),\r\n    );\r\n  }\r\n  get f() {\r\n    return this.settingForm.controls;\r\n  }\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9vbmxpbmUtY2xhc3Nlcy9vbmxpbmUtY2xhc3Nlcy1jb25mL29ubGluZS1jbGFzc2VzLWNvbmYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-branch-conf',\r\n  templateUrl: './online-classes-conf.component.html',\r\n  styleUrls: ['./online-classes-conf.component.scss'],\r\n})\r\nexport class OnlineClassesConfComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OnlineClassesConfComponent } from './online-classes-conf/online-classes-conf.component';\r\nimport { AddOnlineClassComponent } from './online-classes-conf/add-online-class/add-online-class.component';\r\nimport { OnlineClassSettingsComponent } from './online-classes-conf/online-class-settings/online-class-settings.component';\r\nimport { ManageOnlineClassComponent } from './online-classes-conf/manage-online-class/manage-online-class.component';\r\n\r\nconst routes = [\r\n  {\r\n    path: '',\r\n    component: OnlineClassesConfComponent,\r\n    children: [\r\n      { path: 'settings/:id', component: OnlineClassSettingsComponent },\r\n      { path: 'create-class/:id', component: AddOnlineClassComponent },\r\n      { path: 'create-class/:id/edit', component: AddOnlineClassComponent },\r\n      { path: 'manage-class/:id', component: ManageOnlineClassComponent },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OnlineClassesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OnlineClassesRoutingModule } from './online-classes-routing.module';\r\nimport { OnlineClassSettingsComponent } from './online-classes-conf/online-class-settings/online-class-settings.component';\r\nimport { ManageOnlineClassComponent } from './online-classes-conf/manage-online-class/manage-online-class.component';\r\nimport { AddOnlineClassComponent } from './online-classes-conf/add-online-class/add-online-class.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {\r\n  NbCardModule,\r\n  NbLayoutModule,\r\n  NbInputModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbDatepickerModule,\r\n  NbSelectModule,\r\n  NbMenuModule,\r\n  NbAccordionModule,\r\n  NbListModule,\r\n} from '@nebular/theme';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport { OnlineClassesConfComponent } from './online-classes-conf/online-classes-conf.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OnlineClassesConfComponent,\r\n    OnlineClassSettingsComponent,\r\n    ManageOnlineClassComponent,\r\n    AddOnlineClassComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OnlineClassesRoutingModule,\r\n    ReactiveFormsModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    FormsModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NbDatepickerModule,\r\n    NbSelectModule,\r\n    NbMenuModule,\r\n    NbAccordionModule,\r\n    NbEvaIconsModule,\r\n    NbListModule,\r\n  ],\r\n})\r\nexport class OnlineClassesModule {}\r\n"],"sourceRoot":"webpack:///"}