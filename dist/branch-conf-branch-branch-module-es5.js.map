{"version":3,"sources":["src/app/pages/institute/branch-conf/add-batches/add-batches.component.html","src/app/pages/institute/branch-conf/add-batches/manage-batch/manage-batch.component.html","src/app/pages/institute/branch-conf/add-course/add-course.component.html","src/app/pages/institute/branch-conf/add-course/manage-course/manage-course.component.html","src/app/pages/institute/branch-conf/add-course/view-course/view-course.component.html","src/app/pages/institute/branch-conf/branch-conf.component.html","src/app/pages/institute/branch-conf/discount/discount.component.html","src/app/pages/institute/branch-conf/discount/manage-discount/manage-discount.component.html","src/app/pages/institute/branch-conf/employee-management/add-employee.component.html","src/app/pages/institute/branch-conf/employee-management/manage-employee/manage-employee.component.html","src/app/pages/institute/branch-conf/employee-management/view-employee/view-employee.component.html","src/app/pages/institute/branch-conf/receipt-conf/manage-receipt/manage-receipt.component.html","src/app/pages/institute/branch-conf/receipt-conf/receipt-conf.component.html","src/app/pages/institute/branch-conf/add-batches/add-batches.component.scss","src/app/pages/institute/branch-conf/add-batches/add-batches.component.ts","src/app/pages/institute/branch-conf/add-batches/manage-batch/manage-batch.component.scss","src/app/pages/institute/branch-conf/add-batches/manage-batch/manage-batch.component.ts","src/app/pages/institute/branch-conf/add-course/add-course.component.scss","src/app/pages/institute/branch-conf/add-course/add-course.component.ts","src/app/pages/institute/branch-conf/add-course/manage-course/manage-course.component.scss","src/app/pages/institute/branch-conf/add-course/manage-course/manage-course.component.ts","src/app/pages/institute/branch-conf/add-course/view-course/view-course.component.scss","src/app/pages/institute/branch-conf/add-course/view-course/view-course.component.ts","src/app/pages/institute/branch-conf/branch-conf.component.scss","src/app/pages/institute/branch-conf/branch-conf.component.ts","src/app/pages/institute/branch-conf/branch/branch-routing.module.ts","src/app/pages/institute/branch-conf/branch/branch.module.ts","src/app/pages/institute/branch-conf/discount/discount.component.scss","src/app/pages/institute/branch-conf/discount/discount.component.ts","src/app/pages/institute/branch-conf/discount/manage-discount/manage-discount.component.scss","src/app/pages/institute/branch-conf/discount/manage-discount/manage-discount.component.ts","src/app/pages/institute/branch-conf/employee-management/add-employee.component.scss","src/app/pages/institute/branch-conf/employee-management/add-employee.component.ts","src/app/pages/institute/branch-conf/employee-management/manage-employee/manage-employee.component.scss","src/app/pages/institute/branch-conf/employee-management/manage-employee/manage-employee.component.ts","src/app/pages/institute/branch-conf/employee-management/view-employee/view-employee.component.scss","src/app/pages/institute/branch-conf/employee-management/view-employee/view-employee.component.ts","src/app/pages/institute/branch-conf/receipt-conf/manage-receipt/manage-receipt.component.scss","src/app/pages/institute/branch-conf/receipt-conf/manage-receipt/manage-receipt.component.ts","src/app/pages/institute/branch-conf/receipt-conf/receipt-conf.component.scss","src/app/pages/institute/branch-conf/receipt-conf/receipt-conf.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<nb-card *ngIf=\\\"display\\\">\\r\\n  <nb-card-header>\\r\\n    <div>\\r\\n      <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"goManage()\\\">\\r\\n        Manage Batches\\r\\n      </button>\\r\\n      <p style=\\\"color: black; font-weight: bold;\\\">Add Batches</p>\\r\\n    </div>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form [formGroup]=\\\"batchForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <p>Course</p>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <label for=\\\"course\\\">Select Parent Course</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Parent Course\\\"\\r\\n            id=\\\"course\\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"course\\\"\\r\\n            [status]=\\\"f.course.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n          >\\r\\n            <!-- <nb-option value=\\\"\\\">Select Parent Course</nb-option> -->\\r\\n            <nb-option *ngFor=\\\"let course of courses\\\" [value]=\\\"course._id\\\"\\r\\n              >{{ course.name }}\\r\\n            </nb-option>\\r\\n          </nb-select>\\r\\n          <small *ngIf=\\\"f.course.errors && submitted\\\">*course is required</small>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <label for=\\\"code\\\">Unique Code</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            fullWidth\\r\\n            id=\\\"code\\\"\\r\\n            placeholder=\\\"Unique Code\\\"\\r\\n            formControlName=\\\"batchCode\\\"\\r\\n            required\\r\\n            [status]=\\\"f.batchCode.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n          />\\r\\n\\r\\n          <small *ngIf=\\\"f.batchCode.errors && submitted\\\">*Code is required</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <label for=\\\"des\\\">Description</label>\\r\\n          <textarea\\r\\n            name=\\\"description\\\"\\r\\n            id=\\\"des\\\"\\r\\n            cols=\\\"30\\\"\\r\\n            rows=\\\"6\\\"\\r\\n            nbInput\\r\\n            status=\\\"basic\\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"description\\\"\\r\\n            placeholder=\\\"Description\\\"\\r\\n          ></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-yellow-black float-right m-1\\\">Submit</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<nb-card>\\n  <nb-card-header>\\n    <div>\\n      <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"onClick()\\\" style=\\\"color: black;\\\">\\n        Add Batch\\n      </button>\\n      <p style=\\\"color: black; font-weight: bold;\\\">Manage Batch Here</p>\\n    </div>\\n  </nb-card-header>\\n  <nb-card-body>\\n    <table *ngIf=\\\"batches.length > 0; else noBatches\\\">\\n      <thead>\\n        <tr>\\n          <th>Course</th>\\n          <th>Code</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let batch of batches\\\">\\n          <td>{{ batch.course }}</td>\\n          <td>{{ batch.batchCode }}</td>\\n          <td>{{ batch.description }}</td>\\n          <td class=\\\"text-right\\\">\\n            <button class=\\\"mr-3 mb-2 btn btn-yellow\\\" (click)=\\\"edit(batch._id)\\\">\\n              Edit\\n            </button>\\n            <button class=\\\"mr-3 mb-2\\\" nbButton status=\\\"danger\\\" (click)=\\\"delete(batch._id)\\\">\\n              Delete\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <ng-template #noBatches>\\n      <p class=\\\"text-center mt-3\\\">No Batches Found</p>\\n    </ng-template>\\n  </nb-card-body>\\n</nb-card>\\n\"","export default \"<nb-card>\\r\\n  <nb-card-header>\\r\\n    <div>\\r\\n      <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"back()\\\">\\r\\n        MANAGE COURSES\\r\\n      </button>\\r\\n      <p style=\\\"color: black; font-weight: bold;\\\">Add Course Here</p>\\r\\n    </div>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form [formGroup]=\\\"course\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"name\\\">Course Name</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"name\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"f.name.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"name\\\"\\r\\n            placeholder=\\\"Course Name\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.name.errors && submitted\\\">*Course name is req.</small>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"code\\\">Course Code</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"code\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"f.courseCode.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"courseCode\\\"\\r\\n            placeholder=\\\"Course Code\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.courseCode.errors && submitted\\\">*Course code is required</small>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"fees\\\">Course Fees</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            fullWidth\\r\\n            [status]=\\\"f.fees.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            #fees\\r\\n            (keyup)=\\\"courseFee(fees.value)\\\"\\r\\n            id=\\\"fees\\\"\\r\\n            formControlName=\\\"fees\\\"\\r\\n            placeholder=\\\"Course Fees\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.fees.errors && submitted\\\">*Course Fees is required</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr />\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <label for=\\\"gst\\\">Course Duration (in Months)</label>\\r\\n          <input\\r\\n            nbInput\\r\\n            type=\\\"text\\\"\\r\\n            pattern=\\\"\\\\d*\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"f.duration.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"duration\\\"\\r\\n            maxlength=\\\"2\\\"\\r\\n            minlength=\\\"1\\\"\\r\\n            placeholder=\\\"Duration in Months\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.duration.errors && submitted\\\">*Course Duration is required</small>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <label for=\\\"gst\\\">GST</label>\\r\\n          <input\\r\\n            nbInput\\r\\n            type=\\\"text\\\"\\r\\n            pattern=\\\"\\\\d*\\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"gstValue\\\"\\r\\n            #ex\\r\\n            (keyup)=\\\"exclusive(ex.value)\\\"\\r\\n            placeholder=\\\"Exclusive GST in %\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\"><br /><br />Or</div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <br />\\r\\n          <nb-checkbox\\r\\n            (checkedChange)=\\\"inclusiveGst($event)\\\"\\r\\n            [(ngModel)]=\\\"gstCheckBox\\\"\\r\\n            [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n            fullWidth\\r\\n            status=\\\"warning\\\"\\r\\n            >Inclusive GST</nb-checkbox\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <label>Total Fees</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            fullWidth\\r\\n            status=\\\"basic\\\"\\r\\n            formControlName=\\\"totalFee\\\"\\r\\n            disabled=\\\"true\\\"\\r\\n            placeholder=\\\"TotalFee\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr />\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <label for=\\\"des\\\">Description</label>\\r\\n          <textarea\\r\\n            name=\\\"discription\\\"\\r\\n            id=\\\"des\\\"\\r\\n            status=\\\"basic\\\"\\r\\n            nbInput\\r\\n            fullWidth\\r\\n            formControlName=\\\"discription\\\"\\r\\n            placeholder=\\\"Description\\\"\\r\\n            cols=\\\"100\\\"\\r\\n            rows=\\\"4\\\"\\r\\n            id=\\\"dis\\\"\\r\\n          ></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div style=\\\"display: block; margin-top: 1rem; text-align: right;\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-yellow-black\\\">\\r\\n          {{ edit === 'true' ? 'Update Course' : 'Add Course' }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<div>\\n  <nb-card>\\n    <nb-card-header>\\n      <div>\\n        <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"onClick()\\\">\\n          ADD COURSES\\n        </button>\\n        <p style=\\\"color: black; font-weight: bold;\\\">Manage Course Here</p>\\n      </div>\\n    </nb-card-header>\\n    <nb-card-body>\\n      <table *ngIf=\\\"courses.length > 0; else no_courses\\\">\\n        <thead>\\n          <tr>\\n            <th>Course Name</th>\\n            <th>Code</th>\\n            <th>Duration</th>\\n            <th>Fees</th>\\n            <th>GST</th>\\n            <th>Total Fees (Rs.)</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of courses; let i = index\\\">\\n            <td>{{ item.name }}</td>\\n            <td>{{ item.courseCode }}</td>\\n            <td>{{ item.duration }}</td>\\n            <td>{{ item.fees }}</td>\\n            <td>{{ item.gst }}</td>\\n            <td>&#x20B9; {{ item.totalFee }}</td>\\n            <td style=\\\"text-align: right;\\\">\\n              <button class=\\\"mr-3 mb-2 btn btn-yellow\\\" (click)=\\\"edit(item._id)\\\">\\n                Edit\\n              </button>\\n              <button class=\\\"mr-3 mb-2\\\" nbButton status=\\\"danger\\\" (click)=\\\"delete(item._id)\\\">\\n                Del\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <ng-template #no_courses>\\n        <p class=\\\"mt-5 mb-5 text-center\\\">\\n          No Courses Found\\n        </p>\\n      </ng-template>\\n    </nb-card-body>\\n  </nb-card>\\n</div>\\n\"","export default \"<nb-card>\\n  <nb-card-body>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>Id</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.id }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>Course Name</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.name }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>Code</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.code }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>Duration</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.duration }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>Fees</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.fees }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>GST</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.gst }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>Description</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.discription }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-5\\\">\\n        <p>Total Fees</p>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <span>{{ courses.totalFee }}</span>\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n    </div>\\n  </nb-card-body>\\n</nb-card>\\n\"","export default \"<router-outlet></router-outlet>\\n\"","export default \"<nb-card *ngIf=\\\"display\\\">\\n  <nb-card-header>\\n    <div>\\n      <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"back()\\\">Manage Discount</button>\\n      <p style=\\\"color: black; font-weight: bold;\\\">Define Discount</p>\\n    </div>\\n  </nb-card-header>\\n  <nb-card-body>\\n    <form [formGroup]=\\\"discountForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\">\\n          <label for=\\\"code\\\">Code</label>\\n          <input\\n            type=\\\"text\\\"\\n            nbInput\\n            fullWidth\\n            id=\\\"code\\\"\\n            status=\\\"basic\\\"\\n            formControlName=\\\"discountCode\\\"\\n            [status]=\\\"\\n              discountForm.get('discountCode').invalid && discountForm.get('discountCode').touched\\n                ? 'danger'\\n                : 'basic'\\n            \\\"\\n            placeholder=\\\"Code\\\"\\n          />\\n          <small\\n            *ngIf=\\\"\\n              discountForm.get('discountCode').invalid && discountForm.get('discountCode').touched\\n            \\\"\\n            style=\\\"display: block;\\\"\\n            >*This field Required</small\\n          >\\n        </div>\\n\\n        <div class=\\\"col-sm-4\\\">\\n          <label for=\\\"discountType\\\">Discount Type</label>\\n          <nb-select\\n            placeholder=\\\"Select Amount Type\\\"\\n            id=\\\"discountType\\\"\\n            fullWidth\\n            [status]=\\\"\\n              discountForm.get('discountType').invalid && discountForm.get('discountType').touched\\n                ? 'danger'\\n                : 'basic'\\n            \\\"\\n            formControlName=\\\"discountType\\\"\\n          >\\n            <!-- <nb-option value=\\\"\\\">Select Parent Course</nb-option> -->\\n            <nb-option value=\\\"percentage\\\">\\n              Discount in Percentage\\n            </nb-option>\\n            <nb-option value=\\\"amount\\\">\\n              Discount in Amount\\n            </nb-option>\\n          </nb-select>\\n          <small\\n            *ngIf=\\\"\\n              discountForm.get('discountType').invalid && discountForm.get('discountType').touched\\n            \\\"\\n            style=\\\"display: block;\\\"\\n            >*This field Required</small\\n          >\\n        </div>\\n\\n        <div class=\\\"col-sm-4\\\">\\n          <label for=\\\"amt\\\"\\n            >Amount\\n            <span *ngIf=\\\"discountForm.get('discountType').value === 'percentage'\\\"\\n              >(in %)</span\\n            ></label\\n          >\\n          <input\\n            type=\\\"text\\\"\\n            pattern=\\\"\\\\d*\\\"\\n            nbInput\\n            fullWidth\\n            id=\\\"amt\\\"\\n            status=\\\"basic\\\"\\n            formControlName=\\\"amount\\\"\\n            [status]=\\\"\\n              (discountForm.get('amount').invalid || discountForm.hasError('invalidDiscount')) &&\\n              discountForm.get('amount').touched\\n                ? 'danger'\\n                : 'basic'\\n            \\\"\\n            placeholder=\\\"Amount\\\"\\n          />\\n          <small\\n            *ngIf=\\\"\\n              (discountForm.get('amount').invalid || discountForm.hasError('invalidDiscount')) &&\\n              discountForm.get('amount').touched\\n            \\\"\\n            style=\\\"display: block;\\\"\\n            >*Enter Valid Amount</small\\n          >\\n        </div>\\n      </div>\\n\\n      <div class=\\\"mt-3\\\">\\n        <label for=\\\"des\\\">Description</label>\\n        <textarea\\n          name=\\\"description\\\"\\n          nbInput\\n          id=\\\"description\\\"\\n          fullWidth\\n          status=\\\"basic\\\"\\n          cols=\\\"40\\\"\\n          rows=\\\"4\\\"\\n          formControlName=\\\"description\\\"\\n          placeholder=\\\"Description(Optional)\\\"\\n        ></textarea>\\n      </div>\\n      <div class=\\\"mt-4\\\" style=\\\"text-align: right;\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-yellow-black\\\">Submit</button>\\n      </div>\\n    </form>\\n  </nb-card-body>\\n</nb-card>\\n\"","export default \"<nb-card>\\n  <nb-card-header>\\n    <div>\\n      <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"onClick()\\\">Add Discount</button>\\n      <p style=\\\"color: black; font-weight: bold;\\\">Manage Discount Here</p>\\n    </div>\\n  </nb-card-header>\\n  <nb-card-body>\\n    <table *ngIf=\\\"discounts.length > 0; else noDiscounts\\\">\\n      <thead>\\n        <tr>\\n          <th>Code</th>\\n          <th>Amount</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of discounts; let i = index\\\">\\n          <td>{{ item.discountCode }}</td>\\n          <td>{{ item.amount }}<span *ngIf=\\\"item.discountType === 'percentage'\\\">%</span></td>\\n          <td>{{ item.description }}</td>\\n          <td class=\\\"text-right\\\">\\n            <button class=\\\"mr-3 mb-2 btn btn-yellow\\\" (click)=\\\"edit(item._id)\\\">Edit</button>\\n            <button class=\\\"mb-2\\\" nbButton status=\\\"danger\\\" (click)=\\\"delete(item._id)\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <ng-template #noDiscounts>\\n      <p class=\\\"text-center mt-3\\\">No Discounts Found</p>\\n    </ng-template>\\n  </nb-card-body>\\n</nb-card>\\n\"","export default \"<nb-card>\\r\\n  <nb-card-header>\\r\\n    <p style=\\\"color: black; font-weight: bold;\\\">{{ edit ? 'Edit' : 'Add' }} Role Form Here</p>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <nb-checkbox\\r\\n      (checkedChange)=\\\"changeAlreadyRegistered($event)\\\"\\r\\n      [checked]=\\\"alreadyRegistered\\\"\\r\\n      fullWidth\\r\\n      status=\\\"warning\\\"\\r\\n      *ngIf=\\\"!edit && !dataFetched\\\"\\r\\n      >Already Registered Employee</nb-checkbox\\r\\n    >\\r\\n    <form\\r\\n      [formGroup]=\\\"eduAtlasEmployeeForm\\\"\\r\\n      (ngSubmit)=\\\"onEmployeeFormSearch()\\\"\\r\\n      *ngIf=\\\"alreadyRegistered\\\"\\r\\n    >\\r\\n      <p>Fetch Employee</p>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            [status]=\\\"\\r\\n              eduAtlasEmployeeFormControl.eduAtlasId.errors &&\\r\\n              eduAtlasEmployeeFormControl.eduAtlasId.touched\\r\\n                ? 'danger'\\r\\n                : 'basic'\\r\\n            \\\"\\r\\n            id=\\\"eduAtlasId\\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"eduAtlasId\\\"\\r\\n            placeholder=\\\"Enter EduId or Email\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <div style=\\\"text-align: right;\\\">\\r\\n          <button class=\\\"btn btn-yellow-black\\\" type=\\\"submit\\\" *ngIf=\\\"!edit && !dataFetched\\\">\\r\\n            Fetch\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <form [formGroup]=\\\"otpForm\\\" (ngSubmit)=\\\"verifyOtp()\\\" *ngIf=\\\"otpSent && alreadyRegistered\\\">\\r\\n      <p>OTP</p>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            [status]=\\\"otpForm.get('otp').errors && otpForm.get('otp').touched ? 'danger' : 'basic'\\\"\\r\\n            id=\\\"otp\\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"otp\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <div style=\\\"text-align: right;\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-yellow-black\\\" *ngIf=\\\"!edit\\\">\\r\\n            Verify\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr />\\r\\n    </form>\\r\\n\\r\\n    <form\\r\\n      [formGroup]=\\\"employeeForm\\\"\\r\\n      (ngSubmit)=\\\"onSubmit()\\\"\\r\\n      *ngIf=\\\"!alreadyRegistered || (alreadyRegistered && employee) || (employee && edit)\\\"\\r\\n    >\\r\\n      <p>Employee Basic Details</p>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">*Name</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"f.name.errors && f.name.touched ? 'danger' : 'basic'\\\"\\r\\n              id=\\\"name\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"name\\\"\\r\\n              placeholder=\\\"Name\\\"\\r\\n            />\\r\\n            <small *ngIf=\\\"f.name.errors && f.name.touched\\\">*Employee name is required</small>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">*Email</label>\\r\\n            <input\\r\\n              type=\\\"email\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"f.employeeEmail.errors && f.employeeEmail.touched ? 'danger' : 'basic'\\\"\\r\\n              id=\\\"email\\\"\\r\\n              formControlName=\\\"employeeEmail\\\"\\r\\n              fullWidth\\r\\n              placeholder=\\\"Email\\\"\\r\\n            />\\r\\n            <small *ngIf=\\\"f.employeeEmail.errors && f.employeeEmail.touched\\\"\\r\\n              >*Employee email is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"contact\\\">*Employee Contact Number</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              pattern=\\\"\\\\d*\\\"\\r\\n              nbInput\\r\\n              maxlength=\\\"10\\\"\\r\\n              minlength=\\\"10\\\"\\r\\n              [status]=\\\"f.contact.errors && f.contact.touched ? 'danger' : 'basic'\\\"\\r\\n              id=\\\"contact\\\"\\r\\n              formControlName=\\\"contact\\\"\\r\\n              fullWidth\\r\\n              placeholder=\\\"Employee Contact No.\\\"\\r\\n            />\\r\\n            <small *ngIf=\\\"f.contact.errors && f.contact.touched\\\"\\r\\n              >*Employee Contact Number is required.</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <label>*Role</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Role\\\"\\r\\n            [status]=\\\"f.role.errors && f.role.touched ? 'danger' : 'basic'\\\"\\r\\n            status=\\\"basic\\\"\\r\\n            formControlName=\\\"role\\\"\\r\\n          >\\r\\n            <nb-option [value]=\\\"null\\\">Select Role</nb-option>\\r\\n            <nb-option *ngFor=\\\"let role of roles\\\" value=\\\"{{ role }}\\\">{{ role }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small *ngIf=\\\"f.role.errors && f.role.touched\\\">*Employee Role is required.</small>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <label for=\\\"address\\\">Address</label>\\r\\n          <textarea\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            status=\\\"basic\\\"\\r\\n            fullWidth\\r\\n            id=\\\"address\\\"\\r\\n            formControlName=\\\"address\\\"\\r\\n            fullWidth\\r\\n            placeholder=\\\"Address\\\"\\r\\n          >\\r\\n          </textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr />\\r\\n      <div style=\\\"text-align: right;\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-yellow-black\\\">\\r\\n          {{ employeeEduId ? 'Update Employee' : 'Add Employee' }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<nb-card>\\r\\n  <nb-card-header>\\r\\n    <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"onClick()\\\">\\r\\n      Add Employee\\r\\n    </button>\\r\\n    <p class=\\\"font-weight-bolder\\\">Employees</p>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <table *ngIf=\\\"employees.length > 0\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Name</th>\\r\\n          <th>Contact</th>\\r\\n          <th>Role</th>\\r\\n          <!-- <th>Course Name</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let employee of employees; let i = index\\\">\\r\\n          <td>{{ employee.basicDetails.name }}</td>\\r\\n          <td>{{ employee.basicDetails.employeeContact }}</td>\\r\\n          <td>{{ employee.instituteDetails.role }}</td>\\r\\n          <!-- <td>{{ employee.courseDetails.course }}</td> -->\\r\\n          <td>\\r\\n            <button\\r\\n              class=\\\"mr-2 mb-2\\\"\\r\\n              nbButton\\r\\n              status=\\\"primary\\\"\\r\\n              (click)=\\\"view(employee.eduAtlasId, employee._id)\\\"\\r\\n            >\\r\\n              MANAGE\\r\\n            </button>\\r\\n            <button\\r\\n              class=\\\"mr-2 mb-2 btn btn-yellow\\\"\\r\\n              (click)=\\\"edit(employee.eduAtlasId, employee._id)\\\"\\r\\n            >\\r\\n              Edit\\r\\n            </button>\\r\\n            <button class=\\\"mr-2 mb-2\\\" nbButton status=\\\"danger\\\" (click)=\\\"delete(employee._id)\\\">\\r\\n              Delete\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div *ngIf=\\\"employees.length == 0\\\">\\r\\n      <p class=\\\"pt-5 text-center\\\">No Records Found</p>\\r\\n    </div>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<nb-card *ngIf=\\\"employee\\\">\\r\\n  <nb-card-header>\\r\\n    <button nbButton status=\\\"danger\\\" class=\\\"btn float-right mr-3\\\" (click)=\\\"deleteEmployee()\\\">\\r\\n      Delete\\r\\n    </button>\\r\\n    <button class=\\\"btn float-right mr-3 btn btn-yellow\\\" (click)=\\\"edit()\\\">Edit</button>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p class=\\\"font-weight-bold\\\">Name</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p>{{ employee.basicDetails.name }}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p class=\\\"font-weight-bold\\\">Role</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p>{{ employee.instituteDetails.role }}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p class=\\\"font-weight-bold\\\">Email</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p>{{ employee.basicDetails.employeeEmail }}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p class=\\\"font-weight-bold\\\">Contact</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p>{{ employee.basicDetails.employeeContact }}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p class=\\\"font-weight-bold\\\">Address</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <p>{{ employee.basicDetails.employeeAddress }}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-1\\\"></div>\\r\\n    </div>\\r\\n    <hr />\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<nb-card>\\r\\n  <nb-card-header>\\r\\n    <button class=\\\"btn btn-yellow-black float-right\\\" (click)=\\\"onClick()\\\" [hidden]=\\\"receipts\\\">\\r\\n      Add Receipt\\r\\n    </button>\\r\\n\\r\\n    <p style=\\\"color: black; font-weight: bold;\\\">Manage Receipt</p>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <table *ngIf=\\\"receipts; else noReceipt\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Business Name</th>\\r\\n          <th>Address</th>\\r\\n          <th>GST Number</th>\\r\\n          <th>Terms & Conditions</th>\\r\\n          <th>Fee</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>{{ receipts.businessName }}</td>\\r\\n          <td>{{ receipts.address }}</td>\\r\\n          <td>{{ receipts.gstNumber }}</td>\\r\\n          <td>{{ receipts.termsAndCondition }}</td>\\r\\n          <td>{{ receipts.fee }}</td>\\r\\n          <td class=\\\"text-right\\\">\\r\\n            <button class=\\\"mr-3 mb-2 btn btn-yellow\\\" (click)=\\\"edit(instituteId)\\\">Edit</button>\\r\\n            <button class=\\\"mb-2\\\" nbButton status=\\\"danger\\\" (click)=\\\"delete(instituteId)\\\">\\r\\n              Delete\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <ng-template #noReceipt><p class=\\\"mt-5 mb-5 text-center\\\">No Record Found</p></ng-template>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<nb-card>\\r\\n  <nb-card-header>\\r\\n    <div>\\r\\n      <button (click)=\\\"back()\\\" class=\\\"btn btn-yellow-black float-right\\\">Manage Receipt</button>\\r\\n      <p style=\\\"font-weight: bold;\\\">Receipt Configuration</p>\\r\\n    </div>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form [formGroup]=\\\"receipt\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"name\\\">Business Name</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"name\\\"\\r\\n            fullWidth\\r\\n            status=\\\"basic\\\"\\r\\n            formControlName=\\\"businessName\\\"\\r\\n            [status]=\\\"f.businessName.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            placeholder=\\\"Business Name\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.businessName.errors && submitted\\\">*Business Name is Required</small>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"gst\\\">GST Number (Optional)</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            fullWidth\\r\\n            id=\\\"gst\\\"\\r\\n            status=\\\"basic\\\"\\r\\n            formControlName=\\\"gstNumber\\\"\\r\\n            placeholder=\\\"GST Number (optional)\\\"\\r\\n          />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"fee\\\">Fee</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Fee\\\"\\r\\n            id=\\\"fee\\\"\\r\\n            status=\\\"basic\\\"\\r\\n            [status]=\\\"f.fee.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"fee\\\"\\r\\n          >\\r\\n            <nb-option *ngFor=\\\"let item of fees\\\" [value]=\\\"item\\\">{{ item }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small *ngIf=\\\"f.fee.errors && submitted\\\">*Fee is Required</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <label for=\\\"address\\\">Address</label>\\r\\n\\r\\n          <textarea\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            fullWidth\\r\\n            status=\\\"basic\\\"\\r\\n            formControlName=\\\"address\\\"\\r\\n            rows=\\\"5\\\"\\r\\n            [status]=\\\"f.address.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            placeholder=\\\"Address\\\"\\r\\n          >\\r\\n          </textarea>\\r\\n\\r\\n          <small *ngIf=\\\"f.address.errors && submitted\\\">*Address is Required</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <label for=\\\"tc\\\">Terms & Conditions</label>\\r\\n          <textarea\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"tc\\\"\\r\\n            status=\\\"basic\\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"termsAndCondition\\\"\\r\\n            [status]=\\\"f.termsAndCondition.errors && submitted ? 'danger' : 'basic'\\\"\\r\\n            placeholder=\\\"Terms and Conditions\\\"\\r\\n            cols=\\\"15\\\"\\r\\n            rows=\\\"7\\\"\\r\\n          >\\r\\n          </textarea>\\r\\n          <small *ngIf=\\\"f.termsAndCondition.errors && submitted\\\"\\r\\n            >*Terms & Conditions is Required</small\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div style=\\\"text-align: right; margin: 1rem;\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-yellow-black\\\">\\r\\n          {{ edit ? 'Update' : 'Add' }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"input,\\nnb-select,\\ntextarea {\\n  display: block; }\\n\\nsmall {\\n  color: red; }\\n\\np {\\n  color: black;\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1iYXRjaGVzL0U6XFxQcm9qZWN0c1xcRnJlZWxhbmNlIFByb2plY3RzXFxFZHVBdGxhc1xcZWR1YXRsYXMxXFxjbGllbnQvc3JjXFxhcHBcXHBhZ2VzXFxpbnN0aXR1dGVcXGJyYW5jaC1jb25mXFxhZGQtYmF0Y2hlc1xcYWRkLWJhdGNoZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLGNBQWMsRUFBQTs7QUFHaEI7RUFDRSxVQUFVLEVBQUE7O0FBRVo7RUFDRSxZQUFZO0VBQ1osaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9pbnN0aXR1dGUvYnJhbmNoLWNvbmYvYWRkLWJhdGNoZXMvYWRkLWJhdGNoZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCxcbm5iLXNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbnNtYWxsIHtcbiAgY29sb3I6IHJlZDtcbn1cbnAge1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { ApiService } from '../../../../services/api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { NbToastrService } from '@nebular/theme';\r\n@Component({\r\n  selector: 'ngx-add-batches',\r\n  templateUrl: './add-batches.component.html',\r\n  styleUrls: ['./add-batches.component.scss'],\r\n})\r\nexport class AddBatchesComponent implements OnInit {\r\n  courses: any[];\r\n  batchUpdate: any;\r\n  linearMode = true;\r\n  batchForm: FormGroup;\r\n  submitted = false;\r\n  instituteId: string;\r\n  batchId: string;\r\n  edit: string;\r\n  display: boolean;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private toasterService: NbToastrService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.display = false;\r\n    this.courses = [];\r\n    this.route.queryParams.subscribe((data) => {\r\n      this.batchId = data.batchId;\r\n      this.edit = data.edit;\r\n    });\r\n\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n    this.getCourses(this.instituteId);\r\n    this.batchForm = this.fb.group({\r\n      course: ['', Validators.required],\r\n      batchCode: ['', Validators.required],\r\n      description: [''],\r\n    });\r\n    if (this.edit) {\r\n      this.getBatch(this.batchId, this.instituteId);\r\n    } else {\r\n      this.display = true;\r\n    }\r\n  }\r\n\r\n  getBatch(id: any, instituteId: any) {\r\n    let param = new HttpParams();\r\n    param = param.append('instituteId', instituteId);\r\n    param = param.append('batchId', id);\r\n    this.api.getBatch(param).subscribe((res: any[]) => {\r\n      this.batchUpdate = res[0];\r\n      this.batchForm.patchValue({\r\n        course: this.batchUpdate.course,\r\n        batchCode: this.batchUpdate.batchCode,\r\n        description: this.batchUpdate.description,\r\n      });\r\n      this.display = true;\r\n    });\r\n  }\r\n\r\n  getCourses(id: any) {\r\n    this.api.getCourses(id).subscribe((res: any) => {\r\n      this.courses = res.course;\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.batchForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    this.batchForm.markAllAsTouched();\r\n    if (this.batchForm.invalid) {\r\n      return;\r\n    }\r\n    if (this.edit === 'true') {\r\n      let param = new HttpParams();\r\n      param = param.append('instituteId', this.instituteId);\r\n      param = param.append('batchId', this.batchId);\r\n\r\n      const batch = {\r\n        _id: this.batchId,\r\n        course: this.batchForm.value.course,\r\n        batchCode: this.batchForm.value.batchCode.trim(),\r\n        description: this.batchForm.value.description,\r\n      };\r\n      this.api.updateBatch(param, batch).subscribe(\r\n        (res: any) => {\r\n          this.showToast('top-right', 'success', 'Successfully Updated');\r\n          this.router.navigate(['/pages/institute/branch-config/manage-batch/', this.instituteId]);\r\n        },\r\n        (error: any) => {\r\n          this.showToast('top-right', 'danger', error.error.message);\r\n        },\r\n      );\r\n    }\r\n\r\n    if (!this.edit) {\r\n      const batch = {\r\n        course: this.batchForm.value.course,\r\n        batchCode: this.batchForm.value.batchCode.trim(),\r\n        description: this.batchForm.value.description,\r\n      };\r\n      this.api.addBatch(this.instituteId, batch).subscribe(\r\n        () => {\r\n          this.showToast('top-right', 'success', 'Successfully Added');\r\n          setTimeout(() => {\r\n            this.router.navigate([\r\n              '/pages/institute/branch-config/manage-batch/',\r\n              this.instituteId,\r\n            ]);\r\n          }, 1000);\r\n        },\r\n        (err) => {\r\n          this.showToast('top-right', 'danger', err.error.message);\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, { position, status });\r\n  }\r\n\r\n  goManage() {\r\n    let confirm = true;\r\n    if (this.batchForm.touched) {\r\n      confirm = window.confirm('If you go back the data will be lost.');\r\n    }\r\n    if (confirm) {\r\n      this.location.back();\r\n    }\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1iYXRjaGVzL21hbmFnZS1iYXRjaC9FOlxcUHJvamVjdHNcXEZyZWVsYW5jZSBQcm9qZWN0c1xcRWR1QXRsYXNcXGVkdWF0bGFzMVxcY2xpZW50L3NyY1xcYXBwXFxwYWdlc1xcaW5zdGl0dXRlXFxicmFuY2gtY29uZlxcYWRkLWJhdGNoZXNcXG1hbmFnZS1iYXRjaFxcbWFuYWdlLWJhdGNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsV0FDRCxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1iYXRjaGVzL21hbmFnZS1iYXRjaC9tYW5hZ2UtYmF0Y2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcblx0d2lkdGg6MTAwJVxufSJdfQ== */\"","import { NbToastrService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ApiService } from '../../../../../services/api.service';\nimport { MENU_ITEMS } from '../../../../pages-menu';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'ngx-manage-batch',\n  templateUrl: './manage-batch.component.html',\n  styleUrls: ['./manage-batch.component.scss'],\n})\nexport class ManageBatchComponent implements OnInit {\n  batches: any[];\n  instituteId: string;\n  params = new HttpParams();\n  constructor(\n    private api: ApiService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toasterService: NbToastrService,\n  ) {}\n\n  ngOnInit() {\n    this.batches = [];\n    this.instituteId = this.route.snapshot.paramMap.get('id');\n    this.getBatches(this.instituteId);\n  }\n\n  getBatches(id: any) {\n    this.api.getBatches(id).subscribe((res: any) => {\n      this.batches = res.batch;\n    });\n  }\n\n  edit(id: string) {\n    this.router.navigate([`/pages/institute/branch-config/add-batch/${this.instituteId}`], {\n      queryParams: { batchId: id, edit: true },\n    });\n  }\n\n  delete(id: string) {\n    this.params = this.params.append('instituteId', this.instituteId);\n    this.params = this.params.append('batchId', id);\n    this.api.deleteBatch(this.params).subscribe(\n      (res) => {},\n      (err) => console.error(err),\n    );\n    const i = this.batches.findIndex((e) => e._id === id);\n    if (i !== -1) {\n      this.batches.splice(i, 1);\n    }\n  }\n\n  showToast(position: any, status: any, message: any) {\n    this.toasterService.show(status, message, { position, status });\n  }\n\n  onClick() {\n    this.router.navigate(['/pages/institute/branch-config/add-batch', this.instituteId]);\n  }\n}\n","export default \"small {\\n  color: red; }\\n\\ninput, textarea, nb-select {\\n  display: block;\\n  width: 100%; }\\n\\np {\\n  color: black;\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1jb3Vyc2UvRTpcXFByb2plY3RzXFxGcmVlbGFuY2UgUHJvamVjdHNcXEVkdUF0bGFzXFxlZHVhdGxhczFcXGNsaWVudC9zcmNcXGFwcFxccGFnZXNcXGluc3RpdHV0ZVxcYnJhbmNoLWNvbmZcXGFkZC1jb3Vyc2VcXGFkZC1jb3Vyc2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxVQUFVLEVBQUE7O0FBRWQ7RUFDSSxjQUFjO0VBQ2QsV0FBVyxFQUFBOztBQUVmO0VBQUUsWUFBVztFQUFDLGlCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1jb3Vyc2UvYWRkLWNvdXJzZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuc21hbGx7XG4gICAgY29sb3I6IHJlZDtcbn1cbmlucHV0LHRleHRhcmVhLG5iLXNlbGVjdHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbn1cbnB7Y29sb3I6YmxhY2s7Zm9udC13ZWlnaHQ6Ym9sZH1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { ApiService } from '../../../../services/api.service';\r\nimport { MENU_ITEMS } from '../../../pages-menu';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-add-course',\r\n  templateUrl: './add-course.component.html',\r\n  styleUrls: ['./add-course.component.scss'],\r\n})\r\nexport class AddCourseComponent implements OnInit {\r\n  course: FormGroup;\r\n  submitted = false;\r\n  institutes: any[] = [];\r\n  display: boolean = false;\r\n  instituteId: string;\r\n  edit: string;\r\n  courseId: string;\r\n  exclusiveGst: number = null;\r\n  fees: number = 0;\r\n  gstCheckBox: boolean;\r\n  updateCourse: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private toasterService: NbToastrService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n    this.route.queryParams.subscribe((param) => {\r\n      this.courseId = param.courseId;\r\n      this.edit = param.edit;\r\n    });\r\n    this.course = this.fb.group({\r\n      name: ['', Validators.required],\r\n      courseCode: ['', Validators.required],\r\n      fees: ['', Validators.required],\r\n      duration: ['', Validators.required],\r\n      gst: [''],\r\n      gstValue: [''],\r\n      discription: [''],\r\n      totalFee: [''],\r\n    });\r\n\r\n    if (this.edit === 'true') {\r\n      this.getCourse(this.courseId);\r\n    } else {\r\n      this.inclusiveGst(false);\r\n    }\r\n  }\r\n\r\n  getCourse(id) {\r\n    let param = new HttpParams();\r\n    param = param.append('instituteId', this.instituteId);\r\n    param = param.append('courseId', id);\r\n    this.api.getCourse(param).subscribe(\r\n      (res) => {\r\n        this.updateCourse = res[0];\r\n        this.course.patchValue({\r\n          name: this.updateCourse.name,\r\n          courseCode: this.updateCourse.courseCode,\r\n          fees: this.updateCourse.fees,\r\n          duration: this.updateCourse.duration,\r\n          gst: this.updateCourse.gst,\r\n          gstValue: this.updateCourse.gstValue,\r\n          discription: this.updateCourse.discription,\r\n          totalFee: this.updateCourse.totalFee,\r\n        });\r\n        this.exclusiveGst = Number(this.updateCourse.gstValue);\r\n        this.fees = Number(this.updateCourse.fees);\r\n        if (this.updateCourse.gst === 'Inclusive') {\r\n          this.gstCheckBox = true;\r\n          this.inclusiveGst(true);\r\n          this.course.get('gstValue').disable();\r\n        } else {\r\n          this.gstCheckBox = false;\r\n          this.inclusiveGst(false);\r\n        }\r\n      },\r\n      (error) => console.error(error),\r\n    );\r\n  }\r\n  getInstitutes() {\r\n    this.api.getInstitutes().subscribe((data: any) => {\r\n      this.institutes = data;\r\n    });\r\n    this.display = true;\r\n  }\r\n\r\n  get f() {\r\n    return this.course.controls;\r\n  }\r\n\r\n  back() {\r\n    let confirm = true;\r\n    if (this.course.touched) {\r\n      confirm = window.confirm('If you go back the data will be lost.');\r\n    }\r\n    if (confirm) {\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.course.markAllAsTouched();\r\n    if (this.course.invalid) {\r\n      return;\r\n    }\r\n    if (this.edit === 'true') {\r\n      let param = new HttpParams();\r\n      param = param.append('instituteId', this.instituteId);\r\n      param = param.append('courseId', this.courseId);\r\n\r\n      const course = {\r\n        _id: this.courseId,\r\n        name: this.course.value.name,\r\n        courseCode: this.course.value.courseCode.trim(),\r\n        fees: this.course.value.fees,\r\n        duration: this.course.value.duration,\r\n        gst: this.course.value.gst,\r\n        gstValue: this.course.value.gstValue,\r\n        discription: this.course.value.discription,\r\n        totalFee: this.course.value.totalFee,\r\n      };\r\n      this.api.updateCourse(param, course).subscribe(\r\n        (res) => {\r\n          this.showToast('top-right', 'success', 'Course Updated');\r\n          setTimeout(() => {\r\n            this.router.navigate([\r\n              '/pages/institute/branch-config/manage-course/',\r\n              this.instituteId,\r\n            ]);\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          this.showToast('top-right', 'danger', 'Course Updation Failed');\r\n        },\r\n      );\r\n    }\r\n\r\n    if (!this.edit) {\r\n      const course = {\r\n        name: this.course.value.name,\r\n        courseCode: this.course.value.courseCode.trim(),\r\n        fees: this.course.value.fees,\r\n        duration: this.course.value.duration,\r\n        gst: this.course.value.gst,\r\n        gstValue: this.course.value.gstValue,\r\n        discription: this.course.value.discription,\r\n        totalFee: this.course.value.totalFee,\r\n      };\r\n      this.api.addCourse(this.instituteId, course).subscribe(\r\n        (data) => {\r\n          this.showToast('top-right', 'success', 'Course Added Successfully');\r\n          setTimeout(() => {\r\n            this.router.navigate([\r\n              '/pages/institute/branch-config/manage-course/',\r\n              this.instituteId,\r\n            ]);\r\n          }, 1000);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n          this.showToast(\r\n            'top-right',\r\n            'danger',\r\n            err.error.message ? err.error.message : 'This course id already added',\r\n          );\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  inclusiveGst(event: any) {\r\n    const inclusive = event;\r\n    if (inclusive) {\r\n      this.course.get('gstValue').disable();\r\n      this.course.patchValue({\r\n        gst: 'Inclusive',\r\n      });\r\n    } else if (!inclusive || null) {\r\n      this.course.get('gstValue').enable();\r\n      this.course.patchValue({\r\n        gst: 'Exclusive',\r\n      });\r\n    }\r\n    this.calculateTotalFees();\r\n  }\r\n\r\n  calculateTotalFees() {\r\n    let total = 0;\r\n    if (this.course.get('gst').value === 'Inclusive') {\r\n      total = this.fees;\r\n    } else {\r\n      if (this.exclusiveGst == null) {\r\n        total = this.fees;\r\n      } else {\r\n        total = this.fees + (this.exclusiveGst / 100) * this.fees;\r\n      }\r\n    }\r\n    this.course.get('totalFee').setValue(total.toString());\r\n  }\r\n\r\n  exclusive(event: any) {\r\n    this.exclusiveGst = +event;\r\n    const total = this.fees + (this.exclusiveGst / 100) * this.fees;\r\n    this.course.patchValue({\r\n      totalFee: total + '',\r\n      gstValue: this.exclusiveGst === 0 ? '' : this.exclusiveGst + '',\r\n    });\r\n    this.calculateTotalFees();\r\n  }\r\n\r\n  courseFee(event: any) {\r\n    this.fees = +event;\r\n    this.calculateTotalFees();\r\n  }\r\n\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1jb3Vyc2UvbWFuYWdlLWNvdXJzZS9FOlxcUHJvamVjdHNcXEZyZWVsYW5jZSBQcm9qZWN0c1xcRWR1QXRsYXNcXGVkdWF0bGFzMVxcY2xpZW50L3NyY1xcYXBwXFxwYWdlc1xcaW5zdGl0dXRlXFxicmFuY2gtY29uZlxcYWRkLWNvdXJzZVxcbWFuYWdlLWNvdXJzZVxcbWFuYWdlLWNvdXJzZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9icmFuY2gtY29uZi9hZGQtY291cnNlL21hbmFnZS1jb3Vyc2UvbWFuYWdlLWNvdXJzZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../../../../services/api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpParams } from '@angular/common/http';\nimport { MENU_ITEMS } from '../../../../pages-menu';\n\n@Component({\n  selector: 'ngx-manage-course',\n  templateUrl: './manage-course.component.html',\n  styleUrls: ['./manage-course.component.scss'],\n})\nexport class ManageCourseComponent implements OnInit {\n  display: boolean = false;\n  courses: any[] = [];\n  institutes: any[] = [];\n  institute: any[] = [];\n  instituteId: string;\n\n  constructor(private api: ApiService, private router: Router, private active: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.instituteId = this.active.snapshot.paramMap.get('id');\n    this.getCourses(this.instituteId);\n  }\n\n  getCourses(id: any) {\n    this.api.getCourses(id).subscribe((data: any) => {\n      this.courses = data.course;\n    });\n  }\n\n  delete(id: any) {\n    const confirm = window.confirm('Are u sure, you want to Delete This Course?');\n    if (confirm) {\n      let param = new HttpParams();\n      param = param.append('instituteId', this.instituteId);\n      param = param.append('courseId', id);\n      this.api.deleteCourse(param).subscribe(\n        (res) => {\n          const i = this.courses.findIndex((e) => e._id === id);\n          if (i !== -1) {\n            this.courses.splice(i, 1);\n          }\n        },\n        (error) => console.error(error),\n      );\n    }\n  }\n\n  edit(id: string) {\n    this.router.navigate([`/pages/institute/branch-config/add-courses/${this.instituteId}`], {\n      queryParams: { courseId: id, edit: true },\n    });\n  }\n\n  onClick() {\n    this.router.navigate(['/pages/institute/branch-config/add-courses/', this.instituteId]);\n  }\n}\n","export default \"p {\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1jb3Vyc2Uvdmlldy1jb3Vyc2UvRTpcXFByb2plY3RzXFxGcmVlbGFuY2UgUHJvamVjdHNcXEVkdUF0bGFzXFxlZHVhdGxhczFcXGNsaWVudC9zcmNcXGFwcFxccGFnZXNcXGluc3RpdHV0ZVxcYnJhbmNoLWNvbmZcXGFkZC1jb3Vyc2VcXHZpZXctY291cnNlXFx2aWV3LWNvdXJzZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2FkZC1jb3Vyc2Uvdmlldy1jb3Vyc2Uvdmlldy1jb3Vyc2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../../../../services/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { courseData } from '../../../../../../assets/dataTypes/dataType';\n@Component({\n  selector: 'ngx-view-course',\n  templateUrl: './view-course.component.html',\n  styleUrls: ['./view-course.component.scss'],\n})\nexport class ViewCourseComponent implements OnInit {\n  courses: courseData;\n  instituteId: number;\n  constructor(private api: ApiService, private active: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.instituteId = +this.active.snapshot.paramMap.get('id');\n    this.api.getCourse(this.instituteId).subscribe(\n      (data: any) => {\n        this.courses = data;\n      },\n      (err) => console.error(err),\n    );\n  }\n}\n","export default \"small {\\n  color: red; }\\n\\ninput,\\ntextarea {\\n  margin: 10px; }\\n\\na {\\n  margin: 1rem; }\\n\\n.active {\\n  color: red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL0U6XFxQcm9qZWN0c1xcRnJlZWxhbmNlIFByb2plY3RzXFxFZHVBdGxhc1xcZWR1YXRsYXMxXFxjbGllbnQvc3JjXFxhcHBcXHBhZ2VzXFxpbnN0aXR1dGVcXGJyYW5jaC1jb25mXFxicmFuY2gtY29uZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVUsRUFBQTs7QUFFWjs7RUFFRSxZQUFZLEVBQUE7O0FBRWQ7RUFDRSxZQUFZLEVBQUE7O0FBRWQ7RUFDRSxVQUFVLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9pbnN0aXR1dGUvYnJhbmNoLWNvbmYvYnJhbmNoLWNvbmYuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzbWFsbCB7XG4gIGNvbG9yOiByZWQ7XG59XG5pbnB1dCxcbnRleHRhcmVhIHtcbiAgbWFyZ2luOiAxMHB4O1xufVxuYSB7XG4gIG1hcmdpbjogMXJlbTtcbn1cbi5hY3RpdmUge1xuICBjb2xvcjogcmVkO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-branch-conf',\n  templateUrl: './branch-conf.component.html',\n  styleUrls: ['./branch-conf.component.scss'],\n})\nexport class BranchConfComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BranchConfComponent } from '../branch-conf.component';\r\nimport { AddCourseComponent } from '../add-course/add-course.component';\r\nimport { AddBatchesComponent } from '../add-batches/add-batches.component';\r\nimport { DiscountComponent } from '../discount/discount.component';\r\nimport { ReceiptConfComponent } from '../receipt-conf/receipt-conf.component';\r\nimport { ManageCourseComponent } from '../../branch-conf/add-course/manage-course/manage-course.component';\r\nimport { ViewCourseComponent } from '../../branch-conf/add-course/view-course/view-course.component';\r\n\r\nimport { ManageBatchComponent } from '../add-batches/manage-batch/manage-batch.component';\r\n\r\nimport { ManageDiscountComponent } from '../discount/manage-discount/manage-discount.component';\r\n\r\nimport { ManageReceiptComponent } from '../../branch-conf/receipt-conf/manage-receipt/manage-receipt.component';\r\nimport { ManageEmployee } from '../employee-management/manage-employee/manage-employee.component';\r\nimport { AddEmployee } from '../employee-management/add-employee.component';\r\nimport { ViewEmployee } from '../employee-management/view-employee/view-employee.component';\r\n\r\nconst routes = [\r\n  {\r\n    path: '',\r\n    component: BranchConfComponent,\r\n    children: [\r\n      { path: 'add-courses/:id', component: AddCourseComponent },\r\n      { path: 'manage-course/:id', component: ManageCourseComponent },\r\n      { path: 'view-course/:id', component: ViewCourseComponent },\r\n      { path: 'add-batch/:id', component: AddBatchesComponent },\r\n      { path: 'manage-batch/:id', component: ManageBatchComponent },\r\n      { path: 'add-discount/:id', component: DiscountComponent },\r\n      { path: 'manage-discount/:id', component: ManageDiscountComponent },\r\n      { path: 'manage-receipt/:id', component: ManageReceiptComponent },\r\n      { path: 'add-receipt/:id', component: ReceiptConfComponent },\r\n      { path: 'add-employee/:id', component: AddEmployee },\r\n      { path: 'add-employee/:id/edit', component: AddEmployee },\r\n      { path: 'manage-employee/:id', component: ManageEmployee },\r\n      { path: 'view-employee/:id', component: ViewEmployee },\r\n      { path: '', redirectTo: 'add-courses', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BranchRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\n\r\nimport { BranchConfComponent } from '../branch-conf.component';\r\nimport { AddCourseComponent } from '../add-course/add-course.component';\r\nimport { AddBatchesComponent } from '../add-batches/add-batches.component';\r\nimport { BranchRoutingModule } from './branch-routing.module';\r\nimport { ManageEmployee } from '../employee-management/manage-employee/manage-employee.component';\r\nimport { AddEmployee } from '../employee-management/add-employee.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {\r\n  NbCardModule,\r\n  NbLayoutModule,\r\n  NbInputModule,\r\n  NbButtonModule,\r\n  NbSelectModule,\r\n  NbMenuModule,\r\n  NbStepperModule,\r\n  NbAccordionModule,\r\n  NbCheckboxModule,\r\n  NbDatepickerModule,\r\n} from '@nebular/theme';\r\nimport { DiscountComponent } from '../discount/discount.component';\r\nimport { ReceiptConfComponent } from '../receipt-conf/receipt-conf.component';\r\nimport { ManageCourseComponent } from '../../branch-conf/add-course/manage-course/manage-course.component';\r\nimport { ViewCourseComponent } from '../../branch-conf/add-course/view-course/view-course.component';\r\n\r\nimport { ManageBatchComponent } from '../../branch-conf/add-batches/manage-batch/manage-batch.component';\r\n\r\nimport { ManageDiscountComponent } from '../../branch-conf/discount/manage-discount/manage-discount.component';\r\n\r\nimport { ManageReceiptComponent } from '../../branch-conf/receipt-conf/manage-receipt/manage-receipt.component';\r\nimport { ViewEmployee } from '../employee-management/view-employee/view-employee.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BranchConfComponent,\r\n    AddCourseComponent,\r\n    AddBatchesComponent,\r\n    ManageEmployee,\r\n    AddEmployee,\r\n    ViewEmployee,\r\n    DiscountComponent,\r\n    ReceiptConfComponent,\r\n    ManageCourseComponent,\r\n    ViewCourseComponent,\r\n    ManageBatchComponent,\r\n    ManageDiscountComponent,\r\n    ManageReceiptComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BranchRoutingModule,\r\n    ReactiveFormsModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    FormsModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NbDatepickerModule,\r\n    NbSelectModule,\r\n    NbMenuModule,\r\n    NbAccordionModule,\r\n    NbEvaIconsModule,\r\n  ],\r\n})\r\nexport class BranchModule {}\r\n","export default \"small {\\n  color: red;\\n  margin: 0 1rem; }\\n\\ninput,\\ntextarea {\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2Rpc2NvdW50L0U6XFxQcm9qZWN0c1xcRnJlZWxhbmNlIFByb2plY3RzXFxFZHVBdGxhc1xcZWR1YXRsYXMxXFxjbGllbnQvc3JjXFxhcHBcXHBhZ2VzXFxpbnN0aXR1dGVcXGJyYW5jaC1jb25mXFxkaXNjb3VudFxcZGlzY291bnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsY0FBYyxFQUFBOztBQUVoQjs7RUFFRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9pbnN0aXR1dGUvYnJhbmNoLWNvbmYvZGlzY291bnQvZGlzY291bnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzbWFsbCB7XG4gIGNvbG9yOiByZWQ7XG4gIG1hcmdpbjogMCAxcmVtO1xufVxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpParams } from '@angular/common/http';\nimport { Location } from '@angular/common';\nimport { ApiService } from '../../../../services/api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NbToastrService } from '@nebular/theme';\nimport { MENU_ITEMS } from '../../../pages-menu';\n\n@Component({\n  selector: 'ngx-discount',\n  templateUrl: './discount.component.html',\n  styleUrls: ['./discount.component.scss'],\n})\nexport class DiscountComponent implements OnInit {\n  discountForm: FormGroup;\n  instituteId: string;\n  edit: string;\n  discountId: string;\n  discountUpdate: any;\n  display: boolean;\n  constructor(\n    private fb: FormBuilder,\n    private api: ApiService,\n    private router: Router,\n    private location: Location,\n    private active: ActivatedRoute,\n    private toasterService: NbToastrService,\n  ) {}\n\n  ngOnInit() {\n    this.display = false;\n    this.instituteId = this.active.snapshot.paramMap.get('id');\n    this.active.queryParams.subscribe((data) => {\n      this.edit = data.edit;\n      this.discountId = data.discountId;\n    });\n\n    this.discountForm = this.fb.group(\n      {\n        discountCode: ['', Validators.required],\n        discountType: ['percentage', Validators.required],\n        amount: ['', Validators.required],\n        description: [''],\n      },\n      {\n        validator: this.discountValidator.bind(this),\n      },\n    );\n\n    if (this.edit) {\n      this.getDiscount(this.discountId);\n    } else {\n      this.display = true;\n    }\n  }\n\n  discountValidator(group: FormGroup): { [s: string]: boolean } {\n    const discountType = group.value.discountType;\n    const amount = group.value.amount;\n    if (discountType === 'percentage' && amount > 100) {\n      return { invalidDiscount: true };\n    } else if (amount < 0) {\n      return { invalidDiscount: true };\n    }\n    return null;\n  }\n\n  getDiscount(id: any) {\n    let param = new HttpParams();\n    param = param.append('instituteId', this.instituteId);\n    param = param.append('discountId', id);\n    this.api.getDiscount(param).subscribe(\n      (data: any) => {\n        this.discountUpdate = data[0];\n\n        this.discountForm.patchValue({\n          discountCode: this.discountUpdate.discountCode,\n          description: this.discountUpdate.description,\n          discountType: this.discountUpdate.discountType,\n          amount: this.discountUpdate.amount,\n        });\n        this.display = true;\n      },\n      (err: any) => {\n        this.display = true;\n      },\n    );\n  }\n\n  onSubmit() {\n    this.discountForm.markAllAsTouched();\n    if (this.discountForm.invalid) {\n      return;\n    }\n    if (this.edit === 'true') {\n      let param = new HttpParams();\n      param = param.append('instituteId', this.instituteId);\n      param = param.append('discountId', this.discountId);\n      const discount = {\n        _id: this.discountId,\n        discountCode: this.discountForm.value.discountCode.trim(),\n        description: this.discountForm.value.description,\n        amount: this.discountForm.value.amount.trim(),\n        discountType: this.discountForm.value.discountType,\n      };\n      this.api.updateDiscount(param, discount).subscribe(\n        (res) => {\n          this.showToast('top-right', 'success', 'Discount Updated');\n          setTimeout(() => {\n            this.router.navigate([\n              '/pages/institute/branch-config/manage-discount/',\n              this.instituteId,\n            ]);\n          }, 1000);\n        },\n        (error) => {\n          this.showToast('top-right', 'danger', 'Discount Updation Failed');\n        },\n      );\n    } else {\n      const discount = {\n        discountCode: this.discountForm.value.discountCode.trim(),\n        description: this.discountForm.value.description,\n        amount: this.discountForm.value.amount.trim(),\n        discountType: this.discountForm.value.discountType,\n      };\n      this.api.addDiscount(this.instituteId, discount).subscribe(\n        (data) => {\n          this.showToast('top-right', 'success', 'Discount Added Successfully');\n          setTimeout(() => {\n            this.router.navigate([\n              '/pages/institute/branch-config/manage-discount/',\n              this.instituteId,\n            ]);\n          }, 1000);\n        },\n        (err) => {\n          console.error(err);\n          this.showToast('top-right', 'danger', 'This Discount already added');\n        },\n      );\n    }\n  }\n\n  back() {\n    let confirm = true;\n    if (this.discountForm.touched) {\n      confirm = window.confirm('If you go back the data will be lost.');\n    }\n    if (confirm) {\n      this.location.back();\n    }\n  }\n\n  showToast(position: any, status: any, message: any) {\n    this.toasterService.show(status, message, { position, status });\n  }\n}\n","export default \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2Rpc2NvdW50L21hbmFnZS1kaXNjb3VudC9FOlxcUHJvamVjdHNcXEZyZWVsYW5jZSBQcm9qZWN0c1xcRWR1QXRsYXNcXGVkdWF0bGFzMVxcY2xpZW50L3NyY1xcYXBwXFxwYWdlc1xcaW5zdGl0dXRlXFxicmFuY2gtY29uZlxcZGlzY291bnRcXG1hbmFnZS1kaXNjb3VudFxcbWFuYWdlLWRpc2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2Rpc2NvdW50L21hbmFnZS1kaXNjb3VudC9tYW5hZ2UtZGlzY291bnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuIl19 */\"","import { NbToastrService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../../../../services/api.service';\nimport { MENU_ITEMS } from '../../../../pages-menu';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'ngx-manage-discount',\n  templateUrl: './manage-discount.component.html',\n  styleUrls: ['./manage-discount.component.scss'],\n})\nexport class ManageDiscountComponent implements OnInit {\n  discounts: any[];\n  instituteId: string;\n  constructor(\n    private api: ApiService,\n    private router: Router,\n    private active: ActivatedRoute,\n    private toasterService: NbToastrService,\n  ) {}\n\n  ngOnInit() {\n    this.discounts = [];\n    this.instituteId = this.active.snapshot.paramMap.get('id');\n    this.getDiscounts(this.instituteId);\n  }\n\n  getDiscounts(id: string) {\n    this.api.getDiscounts(id).subscribe(\n      (data: any) => {\n        this.discounts = data.discount;\n      },\n      (err) => console.error(err),\n    );\n  }\n\n  edit(id: string) {\n    this.router.navigate([`/pages/institute/branch-config/add-discount/${this.instituteId}`], {\n      queryParams: { discountId: id, edit: true },\n    });\n  }\n\n  delete(id: string) {\n    const confirm = window.confirm('Are u sure, you want to Delete This Discount?');\n    if (confirm) {\n      let param = new HttpParams();\n      param = param.append('instituteId', this.instituteId);\n      param = param.append('discountId', id);\n      this.api.deleteDiscount(param).subscribe((err) => console.error(err));\n      const i = this.discounts.findIndex((e) => e._id === id);\n      if (i !== -1) {\n        this.discounts.splice(i, 1);\n        this.showToast('top-right', 'success', 'Discount Deleted Successfully!');\n      }\n    }\n  }\n\n  showToast(position: any, status: any, message: any) {\n    this.toasterService.show(status, message, { position, status });\n  }\n\n  onClick() {\n    this.router.navigate(['/pages/institute/branch-config/add-discount/', this.instituteId]);\n  }\n}\n","export default \"small {\\n  color: red; }\\n\\n.details {\\n  display: grid;\\n  grid-gap: 10px;\\n  grid-template-columns: repeat(auto-fill, 224px); }\\n\\n.feeDetail {\\n  display: grid;\\n  grid-gap: 10px;\\n  grid-template-columns: repeat(auto-fill, 224px); }\\n\\nnb-select {\\n  display: block; }\\n\\np {\\n  color: black;\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2VtcGxveWVlLW1hbmFnZW1lbnQvRTpcXFByb2plY3RzXFxGcmVlbGFuY2UgUHJvamVjdHNcXEVkdUF0bGFzXFxlZHVhdGxhczFcXGNsaWVudC9zcmNcXGFwcFxccGFnZXNcXGluc3RpdHV0ZVxcYnJhbmNoLWNvbmZcXGVtcGxveWVlLW1hbmFnZW1lbnRcXGFkZC1lbXBsb3llZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFVBQVUsRUFBQTs7QUFFZDtFQUNJLGFBQWE7RUFDYixjQUFhO0VBQ2IsK0NBQStDLEVBQUE7O0FBR25EO0VBQ0csYUFBYTtFQUNiLGNBQWM7RUFDZCwrQ0FBK0MsRUFBQTs7QUFHbEQ7RUFBVSxjQUFhLEVBQUE7O0FBQ3ZCO0VBQUUsWUFBVztFQUFDLGlCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2VtcGxveWVlLW1hbmFnZW1lbnQvYWRkLWVtcGxveWVlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnNtYWxse1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4uZGV0YWlsc3tcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLWdhcDoxMHB4O1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCAyMjRweCk7IFxyXG59XHJcblxyXG4uZmVlRGV0YWlse1xyXG4gICBkaXNwbGF5OiBncmlkO1xyXG4gICBncmlkLWdhcDogMTBweDtcclxuICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCAyMjRweCk7IFxyXG4gICBcclxufVxyXG5uYi1zZWxlY3R7ZGlzcGxheTpibG9ja31cclxucHtjb2xvcjpibGFjaztmb250LXdlaWdodDpib2xkfVxyXG5cclxuICAgXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ApiService } from '../../../../services/api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { SocketioService } from '../../../../services/chat.service';\r\n\r\n@Component({\r\n  selector: 'ngx-add-employee',\r\n  templateUrl: './add-employee.component.html',\r\n  styleUrls: ['./add-employee.component.scss'],\r\n})\r\nexport class AddEmployee implements OnInit {\r\n  employeeForm: FormGroup;\r\n  eduAtlasEmployeeForm: FormGroup;\r\n  instituteId: string;\r\n  institute: any;\r\n  edit: string;\r\n  // OTP Form\r\n  otpForm: FormGroup;\r\n  phone: string;\r\n  // OTP Sent\r\n  otpSent: boolean;\r\n  dataFetched: boolean = false;\r\n\r\n  employeeEduId: string;\r\n  employee: any;\r\n  alreadyRegistered: boolean;\r\n\r\n  roles = ['Teacher', 'Manager', 'Counselor'];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private active: ActivatedRoute,\r\n    private toasterService: NbToastrService,\r\n    private chatService: SocketioService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.alreadyRegistered = false;\r\n\r\n    this.instituteId = this.active.snapshot.paramMap.get('id');\r\n\r\n    this.active.queryParams.subscribe((data) => {\r\n      this.employeeEduId = data.eduAtlasId;\r\n      const employeeObjId = data.employeeObjId;\r\n      this.edit = data.edit;\r\n\r\n      this.employeeForm = this.fb.group({\r\n        name: ['', Validators.required],\r\n        employeeEmail: ['', Validators.compose([Validators.required, Validators.email])],\r\n        contact: ['', Validators.required],\r\n        address: [''],\r\n        role: ['', Validators.required],\r\n      });\r\n\r\n      // Construct Eduatlas Id Form\r\n      this.eduAtlasEmployeeForm = this.fb.group({\r\n        eduAtlasId: ['', Validators.required],\r\n      });\r\n\r\n      // Construct OTP Form\r\n      this.otpForm = this.fb.group({\r\n        otp: ['', Validators.required],\r\n      });\r\n\r\n      if (this.edit === 'true') {\r\n        this.alreadyRegistered = true;\r\n        this.getOneEmployeeByInstitute(employeeObjId, this.instituteId);\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.employeeForm.controls;\r\n  }\r\n\r\n  get eduAtlasEmployeeFormControl() {\r\n    return this.eduAtlasEmployeeForm.controls;\r\n  }\r\n\r\n  onEmployeeFormSearch() {\r\n    if (this.eduAtlasEmployeeForm.valid) {\r\n      const employeeEduId = `${this.eduAtlasEmployeeFormControl['eduAtlasId'].value}`;\r\n      this.api.sendOtpForGetUserDetails(employeeEduId, 'employee').subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.otpSent = true;\r\n            this.phone = res.phone;\r\n            this.showToaster('top-right', 'success', res.message);\r\n          } else {\r\n            this.showToaster('top-right', 'danger', 'Invalid Eduatlas ID');\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.showToaster('top-right', 'danger', 'Invalid Eduatlas ID');\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  verifyOtp() {\r\n    if (this.otpSent && this.otpForm.valid) {\r\n      const otp = this.otpForm.value.otp;\r\n\r\n      const verificationData = {\r\n        verifyType: 'verifyUser',\r\n        otp: this.otpForm.value.otp,\r\n        phone: this.phone,\r\n      };\r\n      this.api.verifyUserOtp(verificationData).subscribe(\r\n        (data) => {\r\n          this.showToaster('top-right', 'success', 'OTP Verified');\r\n          this.getOneEmployee(this.eduAtlasEmployeeForm.value.eduAtlasId);\r\n        },\r\n        (error) => {\r\n          this.showToaster('top-right', 'danger', 'Invalid OTP');\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  getOneEmployee(eduId: any) {\r\n    this.api.getOneEmployee(eduId).subscribe(\r\n      (data: any) => {\r\n        if (data) {\r\n          this.employee = data;\r\n          this.employeeForm.reset();\r\n\r\n          this.employeeForm.patchValue({\r\n            name: this.employee.basicDetails.name,\r\n            employeeEmail: this.employee.basicDetails.employeeEmail,\r\n            contact: this.employee.basicDetails.employeeContact,\r\n            address: this.employee.basicDetails.employeeAddress,\r\n          });\r\n          this.employeeEduId = this.employee.eduAtlasId;\r\n          this.eduAtlasEmployeeForm.get('eduAtlasId').disable();\r\n\r\n          this.employeeForm.patchValue({\r\n            name: this.employee.basicDetails.name,\r\n            employeeEmail: this.employee.basicDetails.employeeEmail,\r\n            contact: this.employee.basicDetails.employeeContact,\r\n            address: this.employee.basicDetails.employeeAddress,\r\n          });\r\n\r\n          this.employeeForm.get('name').disable();\r\n          this.employeeForm.get('employeeEmail').disable();\r\n          this.employeeForm.get('address').disable();\r\n          this.employeeForm.get('contact').disable();\r\n          this.otpSent = false;\r\n          this.phone = null;\r\n          this.dataFetched = true;\r\n        } else {\r\n          this.showToaster('top-right', 'danger', 'Invalid Eduatlas ID');\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.showToaster('top-right', 'danger', 'Invalid Employee EduAtlas ID');\r\n      },\r\n    );\r\n  }\r\n\r\n  changeAlreadyRegistered(e: any) {\r\n    this.alreadyRegistered = e;\r\n    if (!e) {\r\n      this.eduAtlasEmployeeForm.reset();\r\n      this.employeeEduId = null;\r\n      this.employee = null;\r\n    }\r\n  }\r\n\r\n  getOneEmployeeByInstitute(employeeObjId: string, institute: string) {\r\n    this.api\r\n      .getOneEmployeeByInstitute({\r\n        empId: employeeObjId,\r\n        instituteId: institute,\r\n      })\r\n      .subscribe((data: any) => {\r\n        this.employee = data[0];\r\n        // console.log(this.employee);\r\n        const eduAtlId = this.employeeEduId;\r\n\r\n        this.eduAtlasEmployeeForm.patchValue({\r\n          eduAtlasId: eduAtlId,\r\n        });\r\n\r\n        this.eduAtlasEmployeeForm.get('eduAtlasId').disable();\r\n\r\n        this.employeeForm.patchValue({\r\n          name: this.employee.basicDetails.name,\r\n          employeeEmail: this.employee.basicDetails.employeeEmail,\r\n          contact: this.employee.basicDetails.employeeContact,\r\n          address: this.employee.basicDetails.employeeAddress,\r\n          role: this.employee.instituteDetails.role,\r\n        });\r\n\r\n        this.employeeForm.get('name').disable();\r\n        this.employeeForm.get('address').disable();\r\n        this.employeeForm.get('employeeEmail').disable();\r\n        this.employeeForm.get('contact').disable();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.employeeForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.edit === 'true') {\r\n      this.api\r\n        .updateEmployeeInstituteDetails(this.employee._id, this.instituteId, this.f['role'].value)\r\n        .subscribe(\r\n          (res) => {\r\n            this.showToaster('top-right', 'success', 'Employee Updated Successfully!');\r\n            this.router.navigate([\r\n              `/pages/institute/branch-config/manage-employee/${this.instituteId}`,\r\n            ]);\r\n          },\r\n          (err) => this.showToaster('top-right', 'danger', err.error.message),\r\n        );\r\n    }\r\n\r\n    if (!this.edit) {\r\n      if (!this.alreadyRegistered) {\r\n        this.api.addEmployee(this.employeeForm.value, this.instituteId).subscribe(\r\n          (data) => {\r\n            this.chatService.getChatMembers();\r\n            this.showToaster('top-right', 'success', 'New Employee Added Successfully!');\r\n            setTimeout(() => {\r\n              this.router.navigate([\r\n                `/pages/institute/branch-config/manage-employee/${this.instituteId}`,\r\n              ]);\r\n            }, 1000);\r\n          },\r\n          (err) => {\r\n            if (err.error.message.includes('E11000 duplicate key error collection')) {\r\n              this.showToaster(\r\n                'top-right',\r\n                'danger',\r\n                'This Employee Already Exist, Please Search Employee By EDU-Atlas ID',\r\n              );\r\n              this.alreadyRegistered = true;\r\n              return;\r\n            }\r\n            this.alreadyRegistered = true;\r\n            this.showToaster('top-right', 'danger', err.error.message);\r\n          },\r\n        );\r\n      } else {\r\n        if (this.employeeEduId) {\r\n          this.api\r\n            .addEmployeeInstitute(this.employeeEduId, this.instituteId, this.employeeForm.value)\r\n            .subscribe(\r\n              (res) => {\r\n                this.showToaster(\r\n                  'top-right',\r\n                  'success',\r\n                  'Employee Added to Institute Successfully!',\r\n                );\r\n                this.router.navigate([\r\n                  `/pages/institute/branch-config/manage-employee/${this.instituteId}`,\r\n                ]);\r\n              },\r\n              (err) => this.showToaster('top-right', 'danger', err.error.message),\r\n            );\r\n        } else {\r\n          this.showToaster('top-right', 'danger', 'Invalid Eduatlas ID');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  showToaster(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%;\\n  height: 5vh; }\\n\\n.input-group-text {\\n  background-color: #fce062;\\n  color: #000; }\\n\\n.noRecFound {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL2VtcGxveWVlLW1hbmFnZW1lbnQvbWFuYWdlLWVtcGxveWVlL0U6XFxQcm9qZWN0c1xcRnJlZWxhbmNlIFByb2plY3RzXFxFZHVBdGxhc1xcZWR1YXRsYXMxXFxjbGllbnQvc3JjXFxhcHBcXHBhZ2VzXFxpbnN0aXR1dGVcXGJyYW5jaC1jb25mXFxlbXBsb3llZS1tYW5hZ2VtZW50XFxtYW5hZ2UtZW1wbG95ZWVcXG1hbmFnZS1lbXBsb3llZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxXQUFXLEVBQUE7O0FBR2I7RUFDRSx5QkFBeUI7RUFDekIsV0FBVyxFQUFBOztBQUViO0VBQ0UsZUFBZTtFQUNmLFFBQVE7RUFDUixTQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9pbnN0aXR1dGUvYnJhbmNoLWNvbmYvZW1wbG95ZWUtbWFuYWdlbWVudC9tYW5hZ2UtZW1wbG95ZWUvbWFuYWdlLWVtcGxveWVlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogNXZoO1xyXG59XHJcblxyXG4uaW5wdXQtZ3JvdXAtdGV4dCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZTA2MjtcclxuICBjb2xvcjogIzAwMDtcclxufVxyXG4ubm9SZWNGb3VuZCB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ApiService } from '../../../../../services/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-manage-employee',\r\n  templateUrl: './manage-employee.component.html',\r\n  styleUrls: ['./manage-employee.component.scss'],\r\n})\r\nexport class ManageEmployee implements OnInit {\r\n  institute: any;\r\n  form: FormGroup;\r\n\r\n  courses: any[];\r\n  course: string;\r\n\r\n  batches: any[];\r\n\r\n  employees = [];\r\n  instituteId: string;\r\n\r\n  constructor(private api: ApiService, private router: Router, private active: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    this.employees = [];\r\n    this.course = '';\r\n    this.form = new FormGroup({\r\n      course: new FormControl('', { validators: [] }),\r\n      batch: new FormControl('', { validators: [] }),\r\n    });\r\n    this.instituteId = this.active.snapshot.paramMap.get('id');\r\n    this.getEmployees(this.instituteId);\r\n  }\r\n\r\n  getEmployees(instituteId: string) {\r\n    this.api.getEmployeesByInstituteId(instituteId).subscribe((data: any) => {\r\n      this.employees = data;\r\n    });\r\n  }\r\n\r\n  view(eduAtlasId: string, employeeObjId: string) {\r\n    this.router.navigate([`/pages/institute/branch-config/view-employee/${this.instituteId}`], {\r\n      queryParams: { eduAtlasId, employeeObjId },\r\n    });\r\n  }\r\n\r\n  edit(eduAtlasId: string, employeeObjId: string) {\r\n    this.router.navigate([`/pages/institute/branch-config/add-employee/${this.instituteId}/edit`], {\r\n      queryParams: { eduAtlasId, employeeObjId, edit: 'true' },\r\n    });\r\n  }\r\n\r\n  delete(employeeObjId: string) {\r\n    const confirm = window.confirm('Are u sure, You want to Delete this Employee?');\r\n    if (confirm) {\r\n      this.api.deleteEmployeeInstitute(this.instituteId, employeeObjId).subscribe(() => {\r\n        const i = this.employees.findIndex((employee) => employee._id === employeeObjId);\r\n        if (i !== -1) {\r\n          this.employees.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  onClick() {\r\n    this.router.navigate([`/pages/institute/branch-config/add-employee/${this.instituteId}`]);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9icmFuY2gtY29uZi9lbXBsb3llZS1tYW5hZ2VtZW50L3ZpZXctZW1wbG95ZWUvdmlldy1lbXBsb3llZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../../../../services/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-add-employee',\r\n  templateUrl: './view-employee.component.html',\r\n  styleUrls: ['./view-employee.component.scss'],\r\n})\r\nexport class ViewEmployee implements OnInit {\r\n  employee: any;\r\n  instituteId: string;\r\n  employeeEduId: string;\r\n  employeeObjId: string;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n\r\n    this.route.queryParams.subscribe((data) => {\r\n      this.employeeEduId = data.eduAtlasId;\r\n      this.employeeObjId = data.employeeObjId;\r\n    });\r\n\r\n    this.getEmployee(this.employeeObjId);\r\n  }\r\n  getEmployee(employeeObjId: string) {\r\n    this.api\r\n      .getOneEmployeeByInstitute({\r\n        empId: employeeObjId,\r\n        instituteId: this.instituteId,\r\n      })\r\n      .subscribe((data) => {\r\n        this.employee = data[0];\r\n      });\r\n  }\r\n\r\n  deleteEmployee() {\r\n    const confirm = window.confirm('Are u sure, You want to Delete this Employee?');\r\n    if (confirm) {\r\n      this.api.deleteEmployeeInstitute(this.instituteId, this.employeeObjId).subscribe(() => {\r\n        this.location.back();\r\n      });\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    this.router.navigate([`/pages/institute/branch-config/add-employee/${this.instituteId}/edit`], {\r\n      queryParams: {\r\n        eduAtlasId: this.employeeEduId,\r\n        employeeObjId: this.employeeObjId,\r\n        edit: 'true',\r\n      },\r\n    });\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL3JlY2VpcHQtY29uZi9tYW5hZ2UtcmVjZWlwdC9FOlxcUHJvamVjdHNcXEZyZWVsYW5jZSBQcm9qZWN0c1xcRWR1QXRsYXNcXGVkdWF0bGFzMVxcY2xpZW50L3NyY1xcYXBwXFxwYWdlc1xcaW5zdGl0dXRlXFxicmFuY2gtY29uZlxccmVjZWlwdC1jb25mXFxtYW5hZ2UtcmVjZWlwdFxcbWFuYWdlLXJlY2VpcHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9pbnN0aXR1dGUvYnJhbmNoLWNvbmYvcmVjZWlwdC1jb25mL21hbmFnZS1yZWNlaXB0L21hbmFnZS1yZWNlaXB0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { NbToastrService } from '@nebular/theme';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../../../../services/api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MENU_ITEMS } from '../../../../pages-menu';\r\n@Component({\r\n  selector: 'ngx-manage-receipt',\r\n  templateUrl: './manage-receipt.component.html',\r\n  styleUrls: ['./manage-receipt.component.scss'],\r\n})\r\nexport class ManageReceiptComponent implements OnInit {\r\n  receipts = { businessName: '', address: '', fee: '', gstNumber: '', termsAndCondition: '' };\r\n  instituteId: string;\r\n  constructor(\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toasterService: NbToastrService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n    this.getReceipts(this.instituteId);\r\n  }\r\n\r\n  getReceipts(id: string) {\r\n    this.api.getReceipt(id).subscribe((data) => {\r\n      this.receipts = JSON.parse(JSON.stringify(data));\r\n    });\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.router.navigate([`/pages/institute/branch-config/add-receipt/${this.instituteId}`], {\r\n      queryParams: { recieptId: id, edit: true },\r\n    });\r\n  }\r\n\r\n  delete(id: string) {\r\n    const confirm = window.prompt('Are u sure, You want to delete this Receipt?');\r\n    if (confirm) {\r\n      this.api.deleteReceipt(id).subscribe(\r\n        () => {\r\n          this.receipts = null;\r\n          this.showToast('top-right', 'success', 'Receipt Deleted Successfully');\r\n        },\r\n        (err) => console.error(err),\r\n      );\r\n    }\r\n  }\r\n\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, { position, status });\r\n  }\r\n\r\n  onClick() {\r\n    this.router.navigate([`/pages/institute/branch-config/add-receipt/${this.instituteId}`]);\r\n  }\r\n}\r\n","export default \"nb-select {\\n  width: 80%; }\\n\\n.col-sm-2 {\\n  margin: 0 10px; }\\n\\nsmall {\\n  display: block;\\n  color: red;\\n  margin-left: 10px; }\\n\\ninput,\\nnb-select {\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL3JlY2VpcHQtY29uZi9FOlxcUHJvamVjdHNcXEZyZWVsYW5jZSBQcm9qZWN0c1xcRWR1QXRsYXNcXGVkdWF0bGFzMVxcY2xpZW50L3NyY1xcYXBwXFxwYWdlc1xcaW5zdGl0dXRlXFxicmFuY2gtY29uZlxccmVjZWlwdC1jb25mXFxyZWNlaXB0LWNvbmYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVLEVBQUE7O0FBRVo7RUFDRSxjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsY0FBYztFQUNkLFVBQVU7RUFDVixpQkFBaUIsRUFBQTs7QUFFbkI7O0VBRUUsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL2JyYW5jaC1jb25mL3JlY2VpcHQtY29uZi9yZWNlaXB0LWNvbmYuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYi1zZWxlY3Qge1xuICB3aWR0aDogODAlO1xufVxuLmNvbC1zbS0yIHtcbiAgbWFyZ2luOiAwIDEwcHg7XG59XG5zbWFsbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogcmVkO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cbmlucHV0LFxubmItc2VsZWN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../../../services/api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MENU_ITEMS } from '../../../pages-menu';\r\nimport { NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-receipt-conf',\r\n  templateUrl: './receipt-conf.component.html',\r\n  styleUrls: ['./receipt-conf.component.scss'],\r\n})\r\nexport class ReceiptConfComponent implements OnInit {\r\n  receipt: FormGroup;\r\n  submitted = false;\r\n  updateReceipt = { businessName: '', address: '', gstNumber: '', termsAndCondition: '', fee: '' };\r\n  instituteId: string;\r\n  receiptId: string;\r\n  edit: string;\r\n  message: string;\r\n  fees = ['Collection Basis', 'Course Fee Basis'];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private active: ActivatedRoute,\r\n    private router: Router,\r\n    private toasterService: NbToastrService,\r\n    private location: Location,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.instituteId = this.active.snapshot.paramMap.get('id');\r\n    this.active.queryParams.subscribe((data) => {\r\n      this.receiptId = data.receiptId;\r\n      this.edit = data.edit;\r\n      if (this.edit === 'true') {\r\n        this.getReceipt(this.instituteId);\r\n      }\r\n    });\r\n    this.receipt = this.fb.group({\r\n      businessName: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      termsAndCondition: ['', Validators.required],\r\n      fee: ['', Validators.required],\r\n      gstNumber: [''],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.receipt.controls;\r\n  }\r\n\r\n  getReceipt(id: string) {\r\n    this.api.getReceipt(id).subscribe(\r\n      (data) => {\r\n        this.updateReceipt = data;\r\n        this.receipt.patchValue({\r\n          businessName: this.updateReceipt.businessName,\r\n          address: this.updateReceipt.address,\r\n          gstNumber: this.updateReceipt.gstNumber,\r\n          termsAndCondition: this.updateReceipt.termsAndCondition,\r\n          fee: this.updateReceipt.fee,\r\n        });\r\n      },\r\n      (err) => console.error(err),\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.receipt.markAllAsTouched();\r\n    if (this.receipt.invalid) {\r\n      return;\r\n    }\r\n    if (this.edit === 'true') {\r\n      this.api.updateReceipt(this.instituteId, this.receipt.value).subscribe(\r\n        (data) => {\r\n          this.showToast('top-right', 'success', 'receipt Updated Successfully');\r\n          this.router.navigate([\r\n            '/pages/institute/branch-config/manage-receipt/',\r\n            this.instituteId,\r\n          ]);\r\n        },\r\n        (err) => {\r\n          this.showToast('top-right', 'danger', err.error.message);\r\n        },\r\n      );\r\n    }\r\n\r\n    if (!this.edit) {\r\n      this.api.addReceipt(this.instituteId, this.receipt.value).subscribe(\r\n        () => {\r\n          this.showToast('top-right', 'success', 'Receipt Added Successfully');\r\n          this.router.navigate([\r\n            '/pages/institute/branch-config/manage-receipt/',\r\n            this.instituteId,\r\n          ]);\r\n        },\r\n        (err) => {\r\n          this.showToast('top-right', 'danger', err.error.message);\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  back() {\r\n    let confirm = true;\r\n    if (this.receipt.touched) {\r\n      confirm = window.confirm('If you go back the data will be lost.');\r\n    }\r\n    if (confirm) {\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, { position, status });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"branch-conf-branch-branch-module-es5.js"}