{"version":3,"sources":["src/app/pages/institute/online-classes/online-classes-conf/add-online-class/add-online-class.component.html","src/app/pages/institute/online-classes/online-classes-conf/manage-online-class/manage-online-class.component.html","src/app/pages/institute/online-classes/online-classes-conf/online-class-settings/online-class-settings.component.html","src/app/pages/institute/online-classes/online-classes-conf/online-classes-conf.component.html","src/app/pages/institute/online-classes/online-classes-conf/add-online-class/add-online-class.component.scss","src/app/pages/institute/online-classes/online-classes-conf/add-online-class/add-online-class.component.ts","src/app/pages/institute/online-classes/online-classes-conf/manage-online-class/manage-online-class.component.scss","src/app/pages/institute/online-classes/online-classes-conf/manage-online-class/manage-online-class.component.ts","src/app/pages/institute/online-classes/online-classes-conf/online-class-settings/online-class-settings.component.scss","src/app/pages/institute/online-classes/online-classes-conf/online-class-settings/online-class-settings.component.ts","src/app/pages/institute/online-classes/online-classes-conf/online-classes-conf.component.scss","src/app/pages/institute/online-classes/online-classes-conf/online-classes-conf.component.ts","src/app/pages/institute/online-classes/online-classes-routing.module.ts","src/app/pages/institute/online-classes/online-classes.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<p style=\\\"color: black; font-weight: bold;\\\">Schedule A Live Class</p>\\r\\n\\r\\n<nb-card *ngIf=\\\"display\\\">\\r\\n  <nb-card-body>\\r\\n    <form [formGroup]=\\\"onlineClassForm\\\" (submit)=\\\"saveOnlineClass()\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"teacherId\\\">*Teacher</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Teacher\\\"\\r\\n            id=\\\"teacherId\\\"\\r\\n            [status]=\\\"\\r\\n              onlineClassForm.get('teacherId').invalid && onlineClassForm.get('teacherId').touched\\r\\n                ? 'danger'\\r\\n                : 'basic'\\r\\n            \\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"teacherId\\\"\\r\\n          >\\r\\n            <nb-option value=\\\"\\\">Select Teacher</nb-option>\\r\\n            <nb-option *ngFor=\\\"let i of teachers\\\" [value]=\\\"i._id\\\">{{\\r\\n              i.basicDetails.name\\r\\n            }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small\\r\\n            *ngIf=\\\"\\r\\n              onlineClassForm.get('teacherId').invalid && onlineClassForm.get('teacherId').touched\\r\\n            \\\"\\r\\n            >*Course is required</small\\r\\n          >\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"courseId\\\">*Course</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Course\\\"\\r\\n            id=\\\"courseId\\\"\\r\\n            [status]=\\\"\\r\\n              onlineClassForm.get('courseId').invalid && onlineClassForm.get('courseId').touched\\r\\n                ? 'danger'\\r\\n                : 'basic'\\r\\n            \\\"\\r\\n            fullWidth\\r\\n            formControlName=\\\"courseId\\\"\\r\\n            (selectedChange)=\\\"onSelectCourse($event)\\\"\\r\\n          >\\r\\n            <nb-option value=\\\"\\\">Select Course</nb-option>\\r\\n            <nb-option *ngFor=\\\"let i of institute.course\\\" [value]=\\\"i._id\\\">{{ i.name }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small\\r\\n            *ngIf=\\\"\\r\\n              onlineClassForm.get('courseId').invalid && onlineClassForm.get('courseId').touched\\r\\n            \\\"\\r\\n            >*Course is required</small\\r\\n          >\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"batchId\\\">*Batch</label>\\r\\n          <nb-select\\r\\n            placeholder=\\\"Select Batch\\\"\\r\\n            id=\\\"batchId\\\"\\r\\n            formControlName=\\\"batchId\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"\\r\\n              onlineClassForm.get('batchId').invalid && onlineClassForm.get('batchId').touched\\r\\n                ? 'danger'\\r\\n                : 'basic'\\r\\n            \\\"\\r\\n          >\\r\\n            <nb-option value=\\\"\\\">Select Batch</nb-option>\\r\\n            <nb-option *ngFor=\\\"let item of batches\\\" [value]=\\\"item._id\\\">{{\\r\\n              item.batchCode\\r\\n            }}</nb-option>\\r\\n          </nb-select>\\r\\n          <small\\r\\n            *ngIf=\\\"onlineClassForm.get('batchId').invalid && onlineClassForm.get('batchId').touched\\\"\\r\\n            >*Batch is required</small\\r\\n          >\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"startDate\\\">*Start Date</label>\\r\\n            <input\\r\\n              type=\\\"date\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('startDate').invalid && onlineClassForm.get('startDate').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"startDate\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"startDate\\\"\\r\\n              placeholder=\\\"startDate\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('startDate').invalid && onlineClassForm.get('startDate').touched\\r\\n              \\\"\\r\\n              >*Start Date is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"startTime\\\">*Start Time</label>\\r\\n            <input\\r\\n              type=\\\"time\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('startTime').invalid && onlineClassForm.get('startTime').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"startTime\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"startTime\\\"\\r\\n              placeholder=\\\"startTime\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('startTime').invalid && onlineClassForm.get('startTime').touched\\r\\n              \\\"\\r\\n              >*Start Time is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"duration\\\">*Duration (in Min)</label>\\r\\n            <input\\r\\n              type=\\\"duration\\\"\\r\\n              nbInput\\r\\n              pattern=\\\"\\\\d*\\\"\\r\\n              maxlength=\\\"3\\\"\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('duration').invalid && onlineClassForm.get('duration').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"duration\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"duration\\\"\\r\\n              placeholder=\\\"duration\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('duration').invalid && onlineClassForm.get('duration').touched\\r\\n              \\\"\\r\\n              >*Duration is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"topic\\\">*Topic</label>\\r\\n            <input\\r\\n              type=\\\"topic\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('topic').invalid && onlineClassForm.get('topic').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"topic\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"topic\\\"\\r\\n              placeholder=\\\"topic\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"onlineClassForm.get('topic').invalid && onlineClassForm.get('topic').touched\\\"\\r\\n              >*Topic is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"agenda\\\">*Agenda</label>\\r\\n            <input\\r\\n              type=\\\"startTime\\\"\\r\\n              nbInput\\r\\n              status=\\\"basic\\\"\\r\\n              id=\\\"agenda\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"agenda\\\"\\r\\n              placeholder=\\\"Agenda\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">*Password</label>\\r\\n            <input\\r\\n              type=\\\"topic\\\"\\r\\n              nbInput\\r\\n              [status]=\\\"\\r\\n                onlineClassForm.get('password').invalid && onlineClassForm.get('password').touched\\r\\n                  ? 'danger'\\r\\n                  : 'basic'\\r\\n              \\\"\\r\\n              id=\\\"password\\\"\\r\\n              fullWidth\\r\\n              formControlName=\\\"password\\\"\\r\\n              placeholder=\\\"password\\\"\\r\\n            />\\r\\n            <small\\r\\n              *ngIf=\\\"\\r\\n                onlineClassForm.get('password').invalid && onlineClassForm.get('password').touched\\r\\n              \\\"\\r\\n              >*Password is required</small\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\">Save</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<div class=\\\"row mb-2\\\" *ngIf=\\\"display\\\">\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <p style=\\\"color: black; font-weight: bold;\\\">Schedule A Live Class</p>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n    <nb-select\\r\\n      placeholder=\\\"Select Course\\\"\\r\\n      status=\\\"basic\\\"\\r\\n      fullWidth\\r\\n      (selectedChange)=\\\"onSelectCourse($event)\\\"\\r\\n    >\\r\\n      <nb-option value=\\\"\\\">Select Course</nb-option>\\r\\n      <nb-option *ngFor=\\\"let course of institute.course\\\" [value]=\\\"course._id\\\">{{\\r\\n        course.name\\r\\n      }}</nb-option>\\r\\n    </nb-select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n    <nb-select\\r\\n      placeholder=\\\"Select Batch\\\"\\r\\n      fullWidth\\r\\n      status=\\\"basic\\\"\\r\\n      (selectedChange)=\\\"onSelectBatch($event)\\\"\\r\\n    >\\r\\n      <nb-option value=\\\"\\\">Select Batch</nb-option>\\r\\n      <nb-option *ngFor=\\\"let batch of batches\\\" [value]=\\\"batch._id\\\">{{ batch.batchCode }}</nb-option>\\r\\n    </nb-select>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<nb-card status=\\\"info\\\">\\r\\n  <nb-card-header>UPCOMING CLASSES</nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <nb-list *ngIf=\\\"meetings.length > 0; else noMeetings\\\">\\r\\n      <nb-list-item *ngFor=\\\"let meeting of meetings; let i = index\\\">\\r\\n        <div class=\\\"row\\\" style=\\\"width: 100%;\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"date-block\\\">\\r\\n              <span class=\\\"month\\\">{{ month(meeting.startTime) }}</span>\\r\\n              <span class=\\\"day\\\">{{ day(meeting.startTime) }}</span>\\r\\n            </div>\\r\\n            <div class=\\\"meeting-details\\\">\\r\\n              <div class=\\\"detail1\\\">Topic: {{ meeting.topic }}</div>\\r\\n              <div class=\\\"detail1\\\">Start Time: {{ createTime(meeting.startTime) }}</div>\\r\\n              <div class=\\\"detail2\\\">Host: {{ meeting.hostName }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"text-right\\\">\\r\\n              <button class=\\\"mr-3 mb-1\\\" nbButton status=\\\"info\\\" (click)=\\\"goLive(meeting.startUrl)\\\">\\r\\n                Go Live\\r\\n              </button>\\r\\n              <button class=\\\"mr-3 mb-1\\\" nbButton status=\\\"warning\\\" (click)=\\\"notify(i)\\\">\\r\\n                Notify\\r\\n              </button>\\r\\n              <button class=\\\"mr-3 mb-1\\\" nbButton status=\\\"warning\\\" (click)=\\\"edit(meeting._id)\\\">\\r\\n                Edit\\r\\n              </button>\\r\\n              <button\\r\\n                class=\\\"mr-3 mb-1\\\"\\r\\n                nbButton\\r\\n                status=\\\"danger\\\"\\r\\n                (click)=\\\"deleteMeeting(meeting._id, meeting.meetingId)\\\"\\r\\n              >\\r\\n                Delete\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </nb-list-item>\\r\\n    </nb-list>\\r\\n    <ng-template #noMeetings>\\r\\n      <p class=\\\"mt-5 text-center\\\">No Meetings Available</p>\\r\\n    </ng-template>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\\r\\n<!-- <nb-card status=\\\"warning\\\">\\r\\n  <nb-card-header>RECORDED CLASSES</nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <p class=\\\"mt-5 text-center\\\">No Recorded Classes</p>\\r\\n  </nb-card-body>\\r\\n</nb-card> -->\\r\\n\"","export default \"<p style=\\\"color: black; font-weight: bold;\\\">Settings</p>\\r\\n\\r\\n<nb-card>\\r\\n  <nb-card-body>\\r\\n    <form [formGroup]=\\\"settingForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <label for=\\\"publicKey\\\">Public Key</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"publicKey\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"f.publicKey.errors && f.publicKey.touched ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"publicKey\\\"\\r\\n            placeholder=\\\"Public Key\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.publicKey.errors && f.publicKey.touched\\\">*Public Key is req.</small>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <label for=\\\"secretKey\\\">Secret Key</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            nbInput\\r\\n            id=\\\"secretKey\\\"\\r\\n            fullWidth\\r\\n            [status]=\\\"f.secretKey.errors && f.secretKey.touched ? 'danger' : 'basic'\\\"\\r\\n            formControlName=\\\"secretKey\\\"\\r\\n            placeholder=\\\"Secret Key\\\"\\r\\n          />\\r\\n          <small *ngIf=\\\"f.secretKey.errors && f.secretKey.touched\\\">*Secret Key is req.</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"display: block; margin-top: 1rem; text-align: right;\\\">\\r\\n        <button type=\\\"submit\\\" nbButton status=\\\"warning\\\" style=\\\"color: black;\\\">\\r\\n          {{ edit === 'true' ? 'Update Keys' : 'Add Keys' }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9vbmxpbmUtY2xhc3Nlcy9vbmxpbmUtY2xhc3Nlcy1jb25mL2FkZC1vbmxpbmUtY2xhc3MvYWRkLW9ubGluZS1jbGFzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Location } from '@angular/common';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from './../../../../../services/api.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-add-online-class',\r\n  templateUrl: './add-online-class.component.html',\r\n  styleUrls: ['./add-online-class.component.scss'],\r\n})\r\nexport class AddOnlineClassComponent implements OnInit {\r\n  onlineClassForm: FormGroup;\r\n  instituteId: string;\r\n\r\n  institute: any;\r\n\r\n  meetingId: any;\r\n  meeting: any;\r\n  edit: any;\r\n\r\n  batches: any[] = [];\r\n  teachers: any[] = [];\r\n\r\n  display: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private route: ActivatedRoute,\r\n    private toasterService: NbToastrService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.display = false;\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n    this.route.queryParams.subscribe((param) => {\r\n      this.meetingId = param.meeting;\r\n      this.edit = param.edit;\r\n    });\r\n    this.getCourses(this.instituteId);\r\n\r\n    this.onlineClassForm = this.fb.group({\r\n      teacherId: ['', Validators.required],\r\n      instituteId: [this.instituteId],\r\n      courseId: ['', Validators.required],\r\n      batchId: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      startTime: ['', Validators.required],\r\n      duration: ['', Validators.required], // Num in Min\r\n      topic: ['', Validators.required],\r\n      agenda: [''],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  getMeeting(id: string) {\r\n    this.api.getOneMeeting({ id }).subscribe(\r\n      (data: any) => {\r\n        this.meeting = data;\r\n        this.onlineClassForm.patchValue({\r\n          teacherId: this.meeting.hostId,\r\n          instituteId: this.meeting.instituteId,\r\n          courseId: this.meeting.courseId,\r\n          startDate: this.meeting.startTime.split('T')[0],\r\n          startTime: this.meeting.startTime.split('T')[1].substring(0, 5),\r\n          duration: this.meeting.duration,\r\n          topic: this.meeting.topic,\r\n          agenda: this.meeting.agenda,\r\n          password: this.meeting.password,\r\n        });\r\n\r\n        this.onSelectCourse(this.meeting.courseId);\r\n\r\n        this.onlineClassForm.patchValue({\r\n          batchId: this.meeting.batchId,\r\n        });\r\n        this.display = true;\r\n      },\r\n      (err: any) => {},\r\n    );\r\n  }\r\n\r\n  getCourses(id: string) {\r\n    this.api.getCourseTD(id).subscribe((data: any) => {\r\n      this.institute = data;\r\n      this.getEmployees(this.instituteId);\r\n    });\r\n  }\r\n\r\n  onSelectCourse(id: string) {\r\n    this.batches = this.institute.batch.filter((b: any) => b.course === id);\r\n  }\r\n\r\n  getEmployees(instituteId: string) {\r\n    this.api.getEmployeesByInstituteId(instituteId).subscribe((data: any) => {\r\n      this.teachers = data;\r\n      if (this.edit) {\r\n        this.getMeeting(this.meetingId);\r\n      } else {\r\n        this.display = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveOnlineClass() {\r\n    if (this.onlineClassForm.valid) {\r\n      const date =\r\n        this.onlineClassForm.value.startDate + 'T' + this.onlineClassForm.value.startTime + ':00';\r\n\r\n      if (!this.edit) {\r\n        const onlineClass = {\r\n          teacherId: this.onlineClassForm.value.teacherId,\r\n          instituteId: this.instituteId,\r\n          batchId: this.onlineClassForm.value.batchId,\r\n          courseId: this.onlineClassForm.value.courseId,\r\n          startTime: date,\r\n          duration: this.onlineClassForm.value.duration,\r\n          topic: this.onlineClassForm.value.topic,\r\n          agenda: this.onlineClassForm.value.agenda,\r\n          password: this.onlineClassForm.value.password,\r\n        };\r\n        this.api.createMeeting(onlineClass).subscribe(\r\n          (res) => {\r\n            this.showToast('top right', 'success', 'Meeting Added Successfully');\r\n            this.location.back();\r\n          },\r\n          (err: any) => {\r\n            this.showToast('top right', 'danger', err.err.message);\r\n          },\r\n        );\r\n      } else {\r\n        const onlineClass = {\r\n          _id: this.meetingId,\r\n          meetingId: this.meeting.meetingId,\r\n          teacherId: this.onlineClassForm.value.teacherId,\r\n          instituteId: this.instituteId,\r\n          batchId: this.onlineClassForm.value.batchId,\r\n          courseId: this.onlineClassForm.value.courseId,\r\n          startTime: date,\r\n          duration: this.onlineClassForm.value.duration,\r\n          topic: this.onlineClassForm.value.topic,\r\n          agenda: this.onlineClassForm.value.agenda,\r\n          password: this.onlineClassForm.value.password,\r\n        };\r\n\r\n        this.api.updateMeeting(onlineClass).subscribe(\r\n          (res) => {\r\n            this.showToast('top right', 'success', 'Meeting Updated Successfully');\r\n            this.location.back();\r\n          },\r\n          (err: any) => {\r\n            this.showToast('top right', 'danger', err.err.message);\r\n          },\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, { position, status });\r\n  }\r\n}\r\n","export default \".month {\\n  display: block;\\n  text-align: center;\\n  color: #fff;\\n  font-weight: bold;\\n  margin-top: 10px;\\n  font-size: 30px; }\\n\\n.day {\\n  display: block;\\n  text-align: center;\\n  color: #fff;\\n  margin-top: 10px;\\n  font-size: 20px; }\\n\\n.date-block {\\n  float: left;\\n  width: 75px;\\n  height: 75px;\\n  background-color: #0095ff; }\\n\\n.meeting-details {\\n  float: left;\\n  padding-left: 25px;\\n  width: 60%; }\\n\\n.meeting-details .detail1 {\\n  padding-bottom: 10px;\\n  display: block;\\n  font-weight: bold; }\\n\\n.meeting-details .detail2 {\\n  display: block;\\n  font-weight: bold;\\n  color: #a3a2a2; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL29ubGluZS1jbGFzc2VzL29ubGluZS1jbGFzc2VzLWNvbmYvbWFuYWdlLW9ubGluZS1jbGFzcy9FOlxcUHJvamVjdHNcXEZyZWVsYW5jZSBQcm9qZWN0c1xcRWR1QXRsYXNcXGVkdWF0bGFzMVxcY2xpZW50L3NyY1xcYXBwXFxwYWdlc1xcaW5zdGl0dXRlXFxvbmxpbmUtY2xhc3Nlc1xcb25saW5lLWNsYXNzZXMtY29uZlxcbWFuYWdlLW9ubGluZS1jbGFzc1xcbWFuYWdlLW9ubGluZS1jbGFzcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZUFBZSxFQUFBOztBQUdqQjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixlQUFlLEVBQUE7O0FBRWpCO0VBQ0UsV0FBVztFQUNYLFdBQVc7RUFDWCxZQUFZO0VBQ1oseUJBQXlCLEVBQUE7O0FBRTNCO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixVQUFVLEVBQUE7O0FBRVo7RUFDRSxvQkFBb0I7RUFDcEIsY0FBYztFQUNkLGlCQUFpQixFQUFBOztBQUVuQjtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaW5zdGl0dXRlL29ubGluZS1jbGFzc2VzL29ubGluZS1jbGFzc2VzLWNvbmYvbWFuYWdlLW9ubGluZS1jbGFzcy9tYW5hZ2Utb25saW5lLWNsYXNzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vbnRoIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBmb250LXNpemU6IDMwcHg7XHJcbn1cclxuXHJcbi5kYXkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogI2ZmZjtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG4uZGF0ZS1ibG9jayB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgd2lkdGg6IDc1cHg7XHJcbiAgaGVpZ2h0OiA3NXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDk1ZmY7XHJcbn1cclxuLm1lZXRpbmctZGV0YWlscyB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAyNXB4O1xyXG4gIHdpZHRoOiA2MCU7XHJcbn1cclxuLm1lZXRpbmctZGV0YWlscyAuZGV0YWlsMSB7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLm1lZXRpbmctZGV0YWlscyAuZGV0YWlsMiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICNhM2EyYTI7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from '../../../../../services/api.service';\r\n\r\n@Component({\r\n  selector: 'ngx-manage-online-class',\r\n  templateUrl: './manage-online-class.component.html',\r\n  styleUrls: ['./manage-online-class.component.scss'],\r\n})\r\nexport class ManageOnlineClassComponent implements OnInit {\r\n  institute: any;\r\n  instituteId: string;\r\n  batches: any[] = [];\r\n  display: boolean;\r\n  courseId: string;\r\n  batch: string;\r\n\r\n  meetings: any[];\r\n\r\n  months: string[] = [\r\n    'JAN',\r\n    'FEB',\r\n    'MAR',\r\n    'APR',\r\n    'MAY',\r\n    'JUN',\r\n    'JUL',\r\n    'AUG',\r\n    'SEP',\r\n    'OCT',\r\n    'NOV',\r\n    'DEC',\r\n  ];\r\n\r\n  constructor(\r\n    private active: ActivatedRoute,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.display = false;\r\n    this.meetings = [];\r\n    this.instituteId = this.active.snapshot.paramMap.get('id');\r\n    this.getCourses(this.instituteId);\r\n  }\r\n\r\n  getCourses(id: string) {\r\n    this.api.getCourseTD(id).subscribe((data: any) => {\r\n      this.institute = data;\r\n      this.display = true;\r\n    });\r\n  }\r\n\r\n  month(time: string) {\r\n    const month = time.split('T')[0].split('-')[1];\r\n    return this.months[+month - 1];\r\n  }\r\n\r\n  day(time: string) {\r\n    return time.split('T')[0].split('-')[2];\r\n  }\r\n\r\n  onSelectCourse(id: string) {\r\n    this.courseId = id;\r\n    this.batches = this.institute.batch.filter((b: any) => b.course === id);\r\n  }\r\n\r\n  onSelectBatch(batchId: string) {\r\n    this.batch = batchId;\r\n    this.getUpcomingClasses(this.instituteId, batchId);\r\n  }\r\n\r\n  goLive(startUrl: string) {\r\n    window.open(\r\n      startUrl,\r\n      'Zoom',\r\n      'scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no',\r\n    );\r\n  }\r\n\r\n  notify(i: number) {}\r\n\r\n  edit(id: string) {\r\n    this.router.navigate(\r\n      [`/pages/institute/online-classes/create-class/${this.instituteId}/edit`],\r\n      {\r\n        queryParams: { meeting: id, edit: 'true' },\r\n      },\r\n    );\r\n  }\r\n\r\n  deleteMeeting(id: string, meetingId: string) {\r\n    this.api.deleteMeeting({ _id: id, meetingId: meetingId }).subscribe(\r\n      (res: any) => {},\r\n      (err) => {},\r\n    );\r\n  }\r\n\r\n  createTime(time: string) {\r\n    const dateTime = time.split('T');\r\n    return dateTime[0] + ' ' + dateTime[1].substring(0, 5);\r\n  }\r\n\r\n  getUpcomingClasses(instituteId: any, batchId: any) {\r\n    this.api\r\n      .getMeetingByBatch({ instituteId: instituteId, batchId: batchId, type: 'upcoming' })\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.meetings = res;\r\n        },\r\n        (err) => {},\r\n      );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9vbmxpbmUtY2xhc3Nlcy9vbmxpbmUtY2xhc3Nlcy1jb25mL29ubGluZS1jbGFzcy1zZXR0aW5ncy9vbmxpbmUtY2xhc3Mtc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../../../../services/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { AuthService } from '../../../../../services/auth-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'ngx-online-class-settings',\r\n  templateUrl: './online-class-settings.component.html',\r\n  styleUrls: ['./online-class-settings.component.scss'],\r\n})\r\nexport class OnlineClassSettingsComponent implements OnInit {\r\n  instituteId: string;\r\n  edit: string;\r\n  settingForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private toasterService: NbToastrService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.instituteId = this.route.snapshot.paramMap.get('id');\r\n    this.route.queryParams.subscribe((param) => {\r\n      this.edit = param.edit;\r\n    });\r\n\r\n    this.api.getCredentials().subscribe((res: any) => {\r\n      if (res && res.client_id) {\r\n        this.edit = 'true';\r\n        this.settingForm.patchValue({\r\n          publicKey: res.client_id,\r\n          secretKey: res.client_secret_id,\r\n        });\r\n      }\r\n    });\r\n\r\n    this.settingForm = this.fb.group({\r\n      publicKey: ['', Validators.required],\r\n      secretKey: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.settingForm.markAllAsTouched();\r\n\r\n    var userId = this.authService.getUser()._id;\r\n    var requestData = {\r\n      client_id: this.settingForm.get('publicKey').value,\r\n      client_secret_id: this.settingForm.get('secretKey').value,\r\n      user_id: userId,\r\n    };\r\n    this.api.addCredentials(requestData).subscribe(\r\n      (res: any) => {\r\n        this.showToast('top-right', 'success', 'Settings Updated');\r\n        this.api.getZoomAuth({ userId: res.user_id }).subscribe((data: any) => {\r\n          window.open(\r\n            data.authLink,\r\n            '_blank',\r\n            'toolbar,scrollbars,resizable,top=500,left=500,width=400,height=400',\r\n          );\r\n        });\r\n        this.router.navigate(['/pages/institute/online-classes/create-class/', this.instituteId]);\r\n      },\r\n      (error) => console.error(error),\r\n    );\r\n  }\r\n  get f() {\r\n    return this.settingForm.controls;\r\n  }\r\n  showToast(position: any, status: any, message: any) {\r\n    this.toasterService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RpdHV0ZS9vbmxpbmUtY2xhc3Nlcy9vbmxpbmUtY2xhc3Nlcy1jb25mL29ubGluZS1jbGFzc2VzLWNvbmYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-branch-conf',\r\n  templateUrl: './online-classes-conf.component.html',\r\n  styleUrls: ['./online-classes-conf.component.scss'],\r\n})\r\nexport class OnlineClassesConfComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OnlineClassesConfComponent } from './online-classes-conf/online-classes-conf.component';\r\nimport { AddOnlineClassComponent } from './online-classes-conf/add-online-class/add-online-class.component';\r\nimport { OnlineClassSettingsComponent } from './online-classes-conf/online-class-settings/online-class-settings.component';\r\nimport { ManageOnlineClassComponent } from './online-classes-conf/manage-online-class/manage-online-class.component';\r\n\r\nconst routes = [\r\n  {\r\n    path: '',\r\n    component: OnlineClassesConfComponent,\r\n    children: [\r\n      { path: 'settings/:id', component: OnlineClassSettingsComponent },\r\n      { path: 'create-class/:id', component: AddOnlineClassComponent },\r\n      { path: 'create-class/:id/edit', component: AddOnlineClassComponent },\r\n      { path: 'manage-class/:id', component: ManageOnlineClassComponent },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OnlineClassesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OnlineClassesRoutingModule } from './online-classes-routing.module';\r\nimport { OnlineClassSettingsComponent } from './online-classes-conf/online-class-settings/online-class-settings.component';\r\nimport { ManageOnlineClassComponent } from './online-classes-conf/manage-online-class/manage-online-class.component';\r\nimport { AddOnlineClassComponent } from './online-classes-conf/add-online-class/add-online-class.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {\r\n  NbCardModule,\r\n  NbLayoutModule,\r\n  NbInputModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbDatepickerModule,\r\n  NbSelectModule,\r\n  NbMenuModule,\r\n  NbAccordionModule,\r\n  NbListModule,\r\n} from '@nebular/theme';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport { OnlineClassesConfComponent } from './online-classes-conf/online-classes-conf.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OnlineClassesConfComponent,\r\n    OnlineClassSettingsComponent,\r\n    ManageOnlineClassComponent,\r\n    AddOnlineClassComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OnlineClassesRoutingModule,\r\n    ReactiveFormsModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    FormsModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NbDatepickerModule,\r\n    NbSelectModule,\r\n    NbMenuModule,\r\n    NbAccordionModule,\r\n    NbEvaIconsModule,\r\n    NbListModule,\r\n  ],\r\n})\r\nexport class OnlineClassesModule {}\r\n"],"sourceRoot":"webpack:///","file":"online-classes-online-classes-module-es5.js"}