{"version":3,"sources":["./node_modules/primeng/button.js","./node_modules/primeng/components/button/button.js","./node_modules/primeng/components/dom/domhandler.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sFAA4B,G;;;;;;;;;;;;ACNhC;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,eAAe,mBAAO,CAAC,0EAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yJAAyJ,ofAAof,qMAAqM,oKAAoK,+HAA+H,iBAAiB;AACtoC,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;;;;;ACtMa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2DAA2D;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2DAA2D;AACngBAAgB;AAChsC","file":"default~pages-pages-module~student-student-module-es2015.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/button/button\"));","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar common_1 = require(\"@angular/common\");\nvar ButtonDirective = /** @class */ (function () {\n    function ButtonDirective(el) {\n        this.el = el;\n        this.iconPos = 'left';\n        this.cornerStyleClass = 'ui-corner-all';\n    }\n    ButtonDirective.prototype.ngAfterViewInit = function () {\n        domhandler_1.DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n        if (this.icon) {\n            var iconElement = document.createElement(\"span\");\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\n            var iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right' : 'ui-button-icon-left';\n            iconElement.className = iconPosClass + ' ui-clickable ' + this.icon;\n            this.el.nativeElement.appendChild(iconElement);\n        }\n        var labelElement = document.createElement(\"span\");\n        labelElement.className = 'ui-button-text ui-clickable';\n        labelElement.appendChild(document.createTextNode(this.label || 'ui-btn'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    };\n    ButtonDirective.prototype.getStyleClass = function () {\n        var styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\n        if (this.icon) {\n            if (this.label != null && this.label != undefined) {\n                if (this.iconPos == 'left')\n                    styleClass = styleClass + ' ui-button-text-icon-left';\n                else\n                    styleClass = styleClass + ' ui-button-text-icon-right';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-icon-only';\n            }\n        }\n        else {\n            if (this.label) {\n                styleClass = styleClass + ' ui-button-text-only';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-text-empty';\n            }\n        }\n        return styleClass;\n    };\n    Object.defineProperty(ButtonDirective.prototype, \"label\", {\n        get: function () {\n            return this._label;\n        },\n        set: function (val) {\n            this._label = val;\n            if (this.initialized) {\n                domhandler_1.DomHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label;\n                if (!this.icon) {\n                    if (this._label) {\n                        domhandler_1.DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\n                        domhandler_1.DomHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\n                    }\n                    else {\n                        domhandler_1.DomHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\n                        domhandler_1.DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ButtonDirective.prototype, \"icon\", {\n        get: function () {\n            return this._icon;\n        },\n        set: function (val) {\n            this._icon = val;\n            if (this.initialized) {\n                var iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right' : 'ui-button-icon-left';\n                domhandler_1.DomHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\n                    iconPosClass + ' ui-clickable ' + this.icon;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ButtonDirective.prototype.ngOnDestroy = function () {\n        while (this.el.nativeElement.hasChildNodes()) {\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n        this.initialized = false;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], ButtonDirective.prototype, \"iconPos\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], ButtonDirective.prototype, \"cornerStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], ButtonDirective.prototype, \"label\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], ButtonDirective.prototype, \"icon\", null);\n    ButtonDirective = __decorate([\n        core_1.Directive({\n            selector: '[pButton]'\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], ButtonDirective);\n    return ButtonDirective;\n}());\nexports.ButtonDirective = ButtonDirective;\nvar Button = /** @class */ (function () {\n    function Button() {\n        this.iconPos = 'left';\n        this.onClick = new core_1.EventEmitter();\n        this.onFocus = new core_1.EventEmitter();\n        this.onBlur = new core_1.EventEmitter();\n    }\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Button.prototype, \"type\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Button.prototype, \"iconPos\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Button.prototype, \"icon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Button.prototype, \"label\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Button.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Button.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Button.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Button.prototype, \"onClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Button.prototype, \"onFocus\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Button.prototype, \"onBlur\", void 0);\n    Button = __decorate([\n        core_1.Component({\n            selector: 'p-button',\n            template: \"\\n        <button [attr.type]=\\\"type\\\" [class]=\\\"styleClass\\\" [style]=\\\"style\\\" [disabled]=\\\"disabled\\\"\\n            [ngClass]=\\\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\\n                        'ui-button-icon-only': (icon && !label),\\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\\n                        'ui-button-text-only': (!icon && label),\\n                        'ui-button-text-empty': (!icon && !label),\\n                        'ui-state-disabled': disabled}\\\"\\n                        (click)=\\\"onClick.emit($event)\\\" (focus)=\\\"onFocus.emit($event)\\\" (blur)=\\\"onBlur.emit($event)\\\">\\n            <ng-content></ng-content>\\n            <span [ngClass]=\\\"{'ui-clickable': true,\\n                        'ui-button-icon-left': (iconPos === 'left'), \\n                        'ui-button-icon-right': (iconPos === 'right')}\\\"\\n                        [class]=\\\"icon\\\" *ngIf=\\\"icon\\\"></span>\\n            <span class=\\\"ui-button-text ui-clickable\\\">{{label||'ui-btn'}}</span>\\n        </button>\\n    \"\n        })\n    ], Button);\n    return Button;\n}());\nexports.Button = Button;\nvar ButtonModule = /** @class */ (function () {\n    function ButtonModule() {\n    }\n    ButtonModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [ButtonDirective, Button],\n            declarations: [ButtonDirective, Button]\n        })\n    ], ButtonModule);\n    return ButtonModule;\n}());\nexports.ButtonModule = ButtonModule;\n//# sourceMappingURL=button.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DomHandler = /** @class */ (function () {\n    function DomHandler() {\n    }\n    DomHandler.addClass = function (element, className) {\n        if (element.classList)\n            element.classList.add(className);\n        else\n            element.className += ' ' + className;\n    };\n    DomHandler.addMultipleClasses = function (element, className) {\n        if (element.classList) {\n            var styles = className.split(' ');\n            for (var i = 0; i < styles.length; i++) {\n                element.classList.add(styles[i]);\n            }\n        }\n        else {\n            var styles = className.split(' ');\n            for (var i = 0; i < styles.length; i++) {\n                element.className += ' ' + styles[i];\n            }\n        }\n    };\n    DomHandler.removeClass = function (element, className) {\n        if (element.classList)\n            element.classList.remove(className);\n        else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    };\n    DomHandler.hasClass = function (element, className) {\n        if (element.classList)\n            return element.classList.contains(className);\n        else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    };\n    DomHandler.siblings = function (element) {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    };\n    DomHandler.find = function (element, selector) {\n        return Array.from(element.querySelectorAll(selector));\n    };\n    DomHandler.findSingle = function (element, selector) {\n        if (element) {\n            return element.querySelector(selector);\n        }\n        return null;\n    };\n    DomHandler.index = function (element) {\n        var children = element.parentNode.childNodes;\n        var num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    };\n    DomHandler.indexWithinGroup = function (element, attributeName) {\n        var children = element.parentNode.childNodes;\n        var num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    };\n    DomHandler.relativePosition = function (element, target) {\n        var elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        var targetHeight = target.offsetHeight;\n        var targetOffset = target.getBoundingClientRect();\n        var viewport = this.getViewport();\n        var top, left;\n        if ((targetOffset.top + targetHeight + elementDimensions.height) > viewport.height) {\n            top = -1 * (elementDimensions.height);\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight;\n        }\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = targetOffset.left * -1;\n        }\n        else if ((targetOffset.left + elementDimensions.width) > viewport.width) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = 0;\n        }\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    };\n    DomHandler.absolutePosition = function (element, target) {\n        var elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        var elementOuterHeight = elementDimensions.height;\n        var elementOuterWidth = elementDimensions.width;\n        var targetOuterHeight = target.offsetHeight;\n        var targetOuterWidth = target.offsetWidth;\n        var targetOffset = target.getBoundingClientRect();\n        var windowScrollTop = this.getWindowScrollTop();\n        var windowScrollLeft = this.getWindowScrollLeft();\n        var viewport = this.getViewport();\n        var top, left;\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n        }\n        if (targetOffset.left + targetOuterWidth + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    };\n    DomHandler.getHiddenElementOuterHeight = function (element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        var elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementHeight;\n    };\n    DomHandler.getHiddenElementOuterWidth = function (element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        var elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementWidth;\n    };\n    DomHandler.getHiddenElementDimensions = function (element) {\n        var dimensions = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return dimensions;\n    };\n    DomHandler.scrollInView = function (container, item) {\n        var borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        var borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n        var paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n        var paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        var containerRect = container.getBoundingClientRect();\n        var itemRect = item.getBoundingClientRect();\n        var offset = (itemRect.top + document.body.scrollTop) - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        var scroll = container.scrollTop;\n        var elementHeight = container.clientHeight;\n        var itemHeight = this.getOuterHeight(item);\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if ((offset + itemHeight) > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    };\n    DomHandler.fadeIn = function (element, duration) {\n        element.style.opacity = 0;\n        var last = +new Date();\n        var opacity = 0;\n        var tick = function () {\n            opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n        tick();\n    };\n    DomHandler.fadeOut = function (element, ms) {\n        var opacity = 1, interval = 50, duration = ms, gap = interval / duration;\n        var fading = setInterval(function () {\n            opacity = opacity - gap;\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n            element.style.opacity = opacity;\n        }, interval);\n    };\n    DomHandler.getWindowScrollTop = function () {\n        var doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    };\n    DomHandler.getWindowScrollLeft = function () {\n        var doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    };\n    DomHandler.matches = function (element, selector) {\n        var p = Element.prototype;\n        var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n            return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n        };\n        return f.call(element, selector);\n    };\n    DomHandler.getOuterWidth = function (el, margin) {\n        var width = el.offsetWidth;\n        if (margin) {\n            var style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n        return width;\n    };\n    DomHandler.getHorizontalPadding = function (el) {\n        var style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    };\n    DomHandler.getHorizontalMargin = function (el) {\n        var style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    };\n    DomHandler.innerWidth = function (el) {\n        var width = el.offsetWidth;\n        var style = getComputedStyle(el);\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    };\n    DomHandler.width = function (el) {\n        var width = el.offsetWidth;\n        var style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    };\n    DomHandler.getInnerHeight = function (el) {\n        var height = el.offsetHeight;\n        var style = getComputedStyle(el);\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    };\n    DomHandler.getOuterHeight = function (el, margin) {\n        var height = el.offsetHeight;\n        if (margin) {\n            var style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n        return height;\n    };\n    DomHandler.getHeight = function (el) {\n        var height = el.offsetHeight;\n        var style = getComputedStyle(el);\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        return height;\n    };\n    DomHandler.getWidth = function (el) {\n        var width = el.offsetWidth;\n        var style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n        return width;\n    };\n    DomHandler.getViewport = function () {\n        var win = window, d = document, e = d.documentElement, g = d.getElementsByTagName('body')[0], w = win.innerWidth || e.clientWidth || g.clientWidth, h = win.innerHeight || e.clientHeight || g.clientHeight;\n        return { width: w, height: h };\n    };\n    DomHandler.getOffset = function (el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            top: rect.top + document.body.scrollTop,\n            left: rect.left + document.body.scrollLeft\n        };\n    };\n    DomHandler.replaceElementWith = function (element, replacementElement) {\n        var parentNode = element.parentNode;\n        if (!parentNode)\n            throw \"Can't replace element\";\n        return parentNode.replaceChild(replacementElement, element);\n    };\n    DomHandler.getUserAgent = function () {\n        return navigator.userAgent;\n    };\n    DomHandler.isIE = function () {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return true;\n        }\n        // other browser\n        return false;\n    };\n    DomHandler.isIOS = function () {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    };\n    DomHandler.isAndroid = function () {\n        return /(android)/i.test(navigator.userAgent);\n    };\n    DomHandler.appendChild = function (element, target) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    };\n    DomHandler.removeChild = function (element, target) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    };\n    DomHandler.isElement = function (obj) {\n        return (typeof HTMLElement === \"object\" ? obj instanceof HTMLElement :\n            obj && typeof obj === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\");\n    };\n    DomHandler.calculateScrollbarWidth = function (el) {\n        if (el) {\n            var style = getComputedStyle(el);\n            return (el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth));\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n            var scrollDiv = document.createElement(\"div\");\n            scrollDiv.className = \"ui-scrollbar-measure\";\n            document.body.appendChild(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            this.calculatedScrollbarWidth = scrollbarWidth;\n            return scrollbarWidth;\n        }\n    };\n    DomHandler.calculateScrollbarHeight = function () {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n        var scrollDiv = document.createElement(\"div\");\n        scrollDiv.className = \"ui-scrollbar-measure\";\n        document.body.appendChild(scrollDiv);\n        var scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarHeight;\n        return scrollbarHeight;\n    };\n    DomHandler.invokeElementMethod = function (element, methodName, args) {\n        element[methodName].apply(element, args);\n    };\n    DomHandler.clearSelection = function () {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            }\n            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            }\n            catch (error) {\n                //ignore IE bug\n            }\n        }\n    };\n    DomHandler.getBrowser = function () {\n        if (!this.browser) {\n            var matched = this.resolveUserAgent();\n            this.browser = {};\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            }\n            else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n        return this.browser;\n    };\n    DomHandler.resolveUserAgent = function () {\n        var ua = navigator.userAgent.toLowerCase();\n        var match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(msie) ([\\w.]+)/.exec(ua) ||\n            ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n            [];\n        return {\n            browser: match[1] || \"\",\n            version: match[2] || \"0\"\n        };\n    };\n    DomHandler.isInteger = function (value) {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n        }\n    };\n    DomHandler.isHidden = function (element) {\n        return element.offsetParent === null;\n    };\n    DomHandler.zindex = 1000;\n    DomHandler.calculatedScrollbarWidth = null;\n    DomHandler.calculatedScrollbarHeight = null;\n    return DomHandler;\n}());\nexports.DomHandler = DomHandler;\n//# sourceMappingURL=domhandler.js.map"],"sourceRoot":"webpack:///"}